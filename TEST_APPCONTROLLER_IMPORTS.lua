-- –¢–µ—Å—Ç –≤—Å–µ—Ö –∏–º–ø–æ—Ä—Ç–æ–≤ AppController
local ReplicatedStorage = game:GetService("ReplicatedStorage")

print("üß™ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ò–ú–ü–û–†–¢–û–í APPCONTROLLER")
print("====================================")

-- –¢–µ—Å—Ç ModuleLoader
local success, ModuleLoader = pcall(function()
    return require(ReplicatedStorage:WaitForChild("shared"):WaitForChild("ModuleLoader"))
end)

if not success then
    print("‚ùå ModuleLoader –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω:", ModuleLoader)
    return
end
print("‚úÖ ModuleLoader –∑–∞–≥—Ä—É–∂–µ–Ω")

-- –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –º–æ–¥—É–ª–µ–π –∏–∑ AppController
local modules = {
    "Packages/roact",
    "services/CurrencyService", 
    "services/ShopService",
    "services/AbilityService",
    "services/SimplePlatformService",
    "services/SimpleSoundService",
    "shared/AbilityConfig",
    "App/WalletComponent",
    "App/ShopComponent",
    "App/AbilityPanel"
}

-- –¢–µ—Å—Ç–∏—Ä—É–µ–º –∫–∞–∂–¥—ã–π –º–æ–¥—É–ª—å
for _, modulePath in ipairs(modules) do
    local success, result = pcall(function()
        return ModuleLoader.require(modulePath)
    end)
    
    if success then
        print("‚úÖ", modulePath, "- –∑–∞–≥—Ä—É–∂–µ–Ω —É—Å–ø–µ—à–Ω–æ")
        
        -- –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –¥–ª—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ Roact
        if string.find(modulePath, "Component") or string.find(modulePath, "Panel") then
            if type(result) == "table" and result.extend then
                print("  üìù –≠—Ç–æ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π Roact –∫–æ–º–ø–æ–Ω–µ–Ω—Ç")
            else
                print("  ‚ö†Ô∏è –í–æ–∑–º–æ–∂–Ω–æ, –Ω–µ —è–≤–ª—è–µ—Ç—Å—è Roact –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–º")
            end
        end
    else
        print("‚ùå", modulePath, "- –û–®–ò–ë–ö–ê:", result)
    end
end

-- –¢–µ—Å—Ç –ø—Ä—è–º—ã—Ö –∏–º–ø–æ—Ä—Ç–æ–≤
print("\nüîç –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ü–†–Ø–ú–´–• –ò–ú–ü–û–†–¢–û–í")
print("==============================")

local directImports = {
    {path = "shared/ShopConfig", name = "ShopConfig"},
    {path = "shared/Types", name = "Types"}
}

for _, import in ipairs(directImports) do
    local success, result = pcall(function()
        return require(ReplicatedStorage:WaitForChild("shared"):WaitForChild(import.name))
    end)
    
    if success then
        print("‚úÖ", import.name, "- –∑–∞–≥—Ä—É–∂–µ–Ω —É—Å–ø–µ—à–Ω–æ")
    else
        print("‚ùå", import.name, "- –û–®–ò–ë–ö–ê:", result)
    end
end

print("\nüéØ –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù")
print("===============")
print("–ï—Å–ª–∏ –≤—Å–µ –º–æ–¥—É–ª–∏ –∑–∞–≥—Ä—É–∂–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ, AppController –¥–æ–ª–∂–µ–Ω —Ä–∞–±–æ—Ç–∞—Ç—å!")
