--!strict
-- debug/CooldownTester.luau
-- –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∫—É–ª–¥–∞—É–Ω–æ–≤ —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–µ–π –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏

local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")

-- –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
local ModuleLoader = require(ReplicatedStorage:WaitForChild("shared"):WaitForChild("ModuleLoader"))
local AbilityService = ModuleLoader.require("services/AbilityService").new()

local CooldownTester = {}

function CooldownTester.testBasicAbilities()
    local player = Players.LocalPlayer
    if not player then 
        warn("‚ùå CooldownTester: –ò–≥—Ä–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return
    end
    
    print("üß™ === –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ö–£–õ–î–ê–£–ù–û–í –°–ü–û–°–û–ë–ù–û–°–¢–ï–ô ===")
    print("üìÖ –í—Ä–µ–º—è –Ω–∞—á–∞–ª–∞:", os.date("%H:%M:%S"))
    
    local abilities = {"speed_boost", "shield_aura", "jump_boost"}
    
    for i, abilityId in ipairs(abilities) do
        print("\nüî¨ –¢–ï–°–¢", i, "- –°–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å:", abilityId)
        
        -- –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—á–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        local isOwned = AbilityService:isAbilityOwned(player, abilityId)
        local isOnCooldown = AbilityService:isAbilityOnCooldown(player, abilityId)
        local timeLeft = AbilityService:getCooldownTimeLeft(player, abilityId)
        local uiTimeLeft = AbilityService:getUITimeLeft(player, abilityId)
        
        print("  üìä –°—Ç–∞—Ç—É—Å:")
        print("    ‚Ä¢ –í–ª–∞–¥–µ–Ω–∏–µ:", isOwned and "‚úÖ –ï—Å—Ç—å" or "‚ùå –ù–µ—Ç")
        print("    ‚Ä¢ –ö—É–ª–¥–∞—É–Ω:", isOnCooldown and "üîí –ê–∫—Ç–∏–≤–µ–Ω" or "‚úÖ –ì–æ—Ç–æ–≤")
        print("    ‚Ä¢ –í—Ä–µ–º—è –∫—É–ª–¥–∞—É–Ω–∞:", string.format("%.2f —Å–µ–∫", timeLeft))
        print("    ‚Ä¢ UI –≤—Ä–µ–º—è:", string.format("%.2f —Å–µ–∫", uiTimeLeft))
        
        -- –ï—Å–ª–∏ —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å –≥–æ—Ç–æ–≤–∞ –∏ –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∏—Ç –∏–≥—Ä–æ–∫—É, –∞–∫—Ç–∏–≤–∏—Ä—É–µ–º
        if isOwned and not isOnCooldown then
            print("  üöÄ –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å...")
            local result = AbilityService:activateAbility(player, abilityId)
            
            if result.success then
                print("  ‚úÖ –ê–∫—Ç–∏–≤–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞:", result.message)
                
                -- –ú–æ–Ω–∏—Ç–æ—Ä–∏–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≤ —Ç–µ—á–µ–Ω–∏–µ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö —Å–µ–∫—É–Ω–¥
                spawn(function()
                    for t = 1, 35 do -- –ú–æ–Ω–∏—Ç–æ—Ä–∏–º 35 —Å–µ–∫—É–Ω–¥
                        wait(1)
                        
                        local currentCooldown = AbilityService:isAbilityOnCooldown(player, abilityId)
                        local currentTimeLeft = AbilityService:getCooldownTimeLeft(player, abilityId)
                        local currentUITime = AbilityService:getUITimeLeft(player, abilityId)
                        local isUnavailable = AbilityService:isAbilityUnavailableForUI(player, abilityId)
                        
                        if t <= 10 or currentTimeLeft > 0 or t % 5 == 0 then
                            print(string.format("    ‚è±Ô∏è T+%02d —Å–µ–∫ | –ö—É–ª–¥–∞—É–Ω: %s | –û—Å—Ç–∞–ª–æ—Å—å: %.1f | UI: %.1f | –ù–µ–¥–æ—Å—Ç—É–ø–µ–Ω: %s", 
                                t,
                                currentCooldown and "üîí" or "‚úÖ",
                                currentTimeLeft,
                                currentUITime,
                                isUnavailable and "üîí" or "‚úÖ"
                            ))
                        end
                        
                        -- –í–∞–∂–Ω—ã–π –º–æ–º–µ–Ω—Ç: –∫–æ–≥–¥–∞ –∫—É–ª–¥–∞—É–Ω –∑–∞–∫–∞–Ω—á–∏–≤–∞–µ—Ç—Å—è
                        if t > 1 and not currentCooldown and currentTimeLeft <= 0 then
                            print("    üéâ –ö–£–õ–î–ê–£–ù –ó–ê–ö–û–ù–ß–ò–õ–°–Ø –Ω–∞ T+" .. t .. " —Å–µ–∫!")
                            break
                        end
                    end
                end)
            else
                print("  ‚ùå –û—à–∏–±–∫–∞ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏:", result.message)
            end
        end
        
        wait(2) -- –ù–µ–±–æ–ª—å—à–∞—è –ø–∞—É–∑–∞ –º–µ–∂–¥—É —Ç–µ—Å—Ç–∞–º–∏
    end
    
    print("\nüèÅ === –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û ===")
end

function CooldownTester.continuousMonitor()
    local player = Players.LocalPlayer
    if not player then return end
    
    print("üì° === –ù–ï–ü–†–ï–†–´–í–ù–´–ô –ú–û–ù–ò–¢–û–†–ò–ù–ì –ö–£–õ–î–ê–£–ù–û–í ===")
    print("‚ö†Ô∏è –î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç")
    
    local abilities = {"speed_boost", "shield_aura", "jump_boost"}
    local previousStates = {}
    
    -- –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è
    for _, abilityId in ipairs(abilities) do
        previousStates[abilityId] = AbilityService:isAbilityUnavailableForUI(player, abilityId)
    end
    
    spawn(function()
        while true do
            wait(0.1) -- –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥—ã–µ 100 –º—Å
            
            for _, abilityId in ipairs(abilities) do
                local currentState = AbilityService:isAbilityUnavailableForUI(player, abilityId)
                local previousState = previousStates[abilityId]
                
                -- –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è
                if previousState ~= currentState then
                    local timeStamp = os.date("%H:%M:%S")
                    if previousState and not currentState then
                        print(string.format("üü¢ [%s] %s —Å—Ç–∞–ª –î–û–°–¢–£–ü–ï–ù (–∫—É–ª–¥–∞—É–Ω –∑–∞–∫–æ–Ω—á–∏–ª—Å—è)", timeStamp, abilityId))
                    elseif not previousState and currentState then
                        print(string.format("üî¥ [%s] %s —Å—Ç–∞–ª –ù–ï–î–û–°–¢–£–ü–ï–ù (–∫—É–ª–¥–∞—É–Ω –Ω–∞—á–∞–ª—Å—è)", timeStamp, abilityId))
                    end
                    
                    previousStates[abilityId] = currentState
                end
            end
        end
    end)
end

function CooldownTester.testQuickActivations()
    local player = Players.LocalPlayer
    if not player then return end
    
    print("‚ö° === –¢–ï–°–¢ –ë–´–°–¢–†–´–• –ê–ö–¢–ò–í–ê–¶–ò–ô ===")
    
    -- –ü—ã—Ç–∞–µ–º—Å—è –±—ã—Å—Ç—Ä–æ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –æ–¥–Ω—É —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ä–∞–∑
    local abilityId = "speed_boost"
    
    for i = 1, 5 do
        print("\nüîÑ –ü–æ–ø—ã—Ç–∫–∞", i, "–∞–∫—Ç–∏–≤–∞—Ü–∏–∏", abilityId)
        local result = AbilityService:activateAbility(player, abilityId)
        print("  üì§ –†–µ–∑—É–ª—å—Ç–∞—Ç:", result.success and "‚úÖ –£—Å–ø–µ—Ö" or "‚ùå –ù–µ—É–¥–∞—á–∞")
        print("  üí¨ –°–æ–æ–±—â–µ–Ω–∏–µ:", result.message)
        
        wait(0.5) -- –ù–µ–±–æ–ª—å—à–∞—è –ø–∞—É–∑–∞ –º–µ–∂–¥—É –ø–æ–ø—ã—Ç–∫–∞–º–∏
    end
end

-- –ü—É–±–ª–∏—á–Ω—ã–π API
return {
    testBasicAbilities = CooldownTester.testBasicAbilities,
    continuousMonitor = CooldownTester.continuousMonitor,
    testQuickActivations = CooldownTester.testQuickActivations,
}
