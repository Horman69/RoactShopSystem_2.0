--!strict
-- debug/QuickCooldownTest.luau
-- –ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–±–ª–µ–º—ã —Å –ø–æ—Å–ª–µ–¥–Ω–µ–π —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å—é

local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")

local ModuleLoader = require(ReplicatedStorage:WaitForChild("shared"):WaitForChild("ModuleLoader"))
local AbilityService = ModuleLoader.require("services/AbilityService").new()

local QuickTest = {}

function QuickTest.testSequentialActivation()
    local player = Players.LocalPlayer
    if not player then 
        warn("‚ùå QuickTest: –ò–≥—Ä–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return
    end
    
    print("üß™ === –¢–ï–°–¢ –ü–û–°–õ–ï–î–û–í–ê–¢–ï–õ–¨–ù–û–ô –ê–ö–¢–ò–í–ê–¶–ò–ò –°–ü–û–°–û–ë–ù–û–°–¢–ï–ô ===")
    print("üìÖ –í—Ä–µ–º—è –Ω–∞—á–∞–ª–∞:", os.date("%H:%M:%S"))
    
    local abilities = {"speed_boost", "shield_aura", "jump_boost"}
    local activationDelay = 2 -- —Å–µ–∫—É–Ω–¥ –º–µ–∂–¥—É –∞–∫—Ç–∏–≤–∞—Ü–∏—è–º–∏
    
    -- –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –≤—Å–µ —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ
    for i, abilityId in ipairs(abilities) do
        print(string.format("\nüöÄ –ê–ö–¢–ò–í–ê–¶–ò–Ø %d/%d: %s", i, #abilities, abilityId))
        
        local isOwned = AbilityService:isAbilityOwned(player, abilityId)
        local isOnCooldown = AbilityService:isAbilityOnCooldown(player, abilityId)
        
        print("  üìä –î–æ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏:")
        print("    ‚Ä¢ –í–ª–∞–¥–µ–Ω–∏–µ:", isOwned and "‚úÖ" or "‚ùå")
        print("    ‚Ä¢ –ö—É–ª–¥–∞—É–Ω:", isOnCooldown and "üîí" or "‚úÖ")
        
        if isOwned and not isOnCooldown then
            local result = AbilityService:activateAbility(player, abilityId)
            print("  üì§ –†–µ–∑—É–ª—å—Ç–∞—Ç –∞–∫—Ç–∏–≤–∞—Ü–∏–∏:", result.success and "‚úÖ –£—Å–ø–µ—Ö" or "‚ùå –ù–µ—É–¥–∞—á–∞")
            print("  üí¨ –°–æ–æ–±—â–µ–Ω–∏–µ:", result.message)
            
            if result.success then
                -- –ó–∞–ø—É—Å–∫–∞–µ–º –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –¥–ª—è —ç—Ç–æ–π —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏
                spawn(function()
                    QuickTest.monitorSpecificAbility(abilityId, i == #abilities) -- –û—Å–æ–±–æ–µ –≤–Ω–∏–º–∞–Ω–∏–µ –∫ –ø–æ—Å–ª–µ–¥–Ω–µ–π
                end)
            end
        else
            print("  ‚ö†Ô∏è –°–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞ –¥–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏")
        end
        
        if i < #abilities then
            print(string.format("  ‚è±Ô∏è –û–∂–∏–¥–∞–Ω–∏–µ %d —Å–µ–∫ –¥–æ —Å–ª–µ–¥—É—é—â–µ–π –∞–∫—Ç–∏–≤–∞—Ü–∏–∏...", activationDelay))
            wait(activationDelay)
        end
    end
    
    print("\nüéØ –í—Å–µ —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω—ã! –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ø—Ä–æ–¥–æ–ª–∂–∞–µ—Ç—Å—è...")
    print("‚ö†Ô∏è –û–±—Ä–∞—Ç–∏—Ç–µ –æ—Å–æ–±–æ–µ –≤–Ω–∏–º–∞–Ω–∏–µ –Ω–∞", abilities[#abilities], "- —ç—Ç–æ –ø–æ—Å–ª–µ–¥–Ω—è—è —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å!")
end

function QuickTest.monitorSpecificAbility(abilityId, isLast)
    local player = Players.LocalPlayer
    if not player then return end
    
    local prefix = isLast and "üî¥ –ü–û–°–õ–ï–î–ù–Ø–Ø" or "üü°"
    print(string.format("%s === –ú–û–ù–ò–¢–û–†–ò–ù–ì: %s ===", prefix, abilityId))
    
    local wasOnCooldown = nil
    local monitoringTime = 0
    
    while monitoringTime < 35 do -- –ú–æ–Ω–∏—Ç–æ—Ä–∏–º 35 —Å–µ–∫—É–Ω–¥
        wait(0.5) -- –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥—ã–µ 0.5 —Å–µ–∫—É–Ω–¥—ã
        monitoringTime = monitoringTime + 0.5
        
        local isOnCooldown = AbilityService:isAbilityOnCooldown(player, abilityId)
        local isUnavailable = AbilityService:isAbilityUnavailableForUI(player, abilityId)
        local timeLeft = AbilityService:getCooldownTimeLeft(player, abilityId)
        local uiTimeLeft = AbilityService:getUITimeLeft(player, abilityId)
        
        -- –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è
        if wasOnCooldown ~= nil and wasOnCooldown ~= isOnCooldown then
            local status = isOnCooldown and "üîí –ù–ê–ß–ê–õ–°–Ø" or "‚úÖ –ó–ê–ö–û–ù–ß–ò–õ–°–Ø"
            print(string.format("%s [%.1f] %s: –ö—É–ª–¥–∞—É–Ω %s", prefix, monitoringTime, abilityId, status))
            
            if not isOnCooldown and isLast then
                print("üéâ –ö–†–ò–¢–ò–ß–ï–°–ö–ò –í–ê–ñ–ù–û: –ü–æ—Å–ª–µ–¥–Ω—è—è —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å –¥–æ–ª–∂–Ω–∞ —Å—Ç–∞—Ç—å –¥–æ—Å—Ç—É–ø–Ω–æ–π –°–ï–ô–ß–ê–°!")
                
                -- –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ UI
                wait(0.1)
                local finalUICheck = AbilityService:isAbilityUnavailableForUI(player, abilityId)
                print(string.format("üîç –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ UI: %s %s", 
                    abilityId, 
                    finalUICheck and "‚ùå –í–°–ï –ï–©–ï –ù–ï–î–û–°–¢–£–ü–ï–ù" or "‚úÖ –î–û–°–¢–£–ü–ï–ù"
                ))
            end
        end
        
        wasOnCooldown = isOnCooldown
        
        -- –õ–æ–≥–∏—Ä—É–µ–º –∫–∞–∂–¥—ã–µ 5 —Å–µ–∫—É–Ω–¥ –∏–ª–∏ –ø—Ä–∏ –≤–∞–∂–Ω—ã—Ö –º–æ–º–µ–Ω—Ç–∞—Ö
        if monitoringTime % 5 == 0 or timeLeft <= 1 then
            print(string.format("%s [%.1f] %s: CD=%.1f UI=%.1f –ù–µ–¥–æ—Å—Ç—É–ø–µ–Ω=%s", 
                prefix, monitoringTime, abilityId, timeLeft, uiTimeLeft, 
                isUnavailable and "üîí" or "‚úÖ"
            ))
        end
        
        -- –í—ã—Ö–æ–¥–∏–º –µ—Å–ª–∏ –∫—É–ª–¥–∞—É–Ω –∑–∞–∫–æ–Ω—á–∏–ª—Å—è
        if timeLeft <= 0 and not isOnCooldown then
            print(string.format("%s [%.1f] %s: –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∑–∞–≤–µ—Ä—à–µ–Ω - —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å –≥–æ—Ç–æ–≤–∞!", prefix, monitoringTime, abilityId))
            break
        end
    end
end

return QuickTest
