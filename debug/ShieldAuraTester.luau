--!strict
-- debug/ShieldAuraTester.luau
-- –¢–µ—Å—Ç–µ—Ä —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –∞—É—Ä —â–∏—Ç–∞

local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")

local ModuleLoader = require(ReplicatedStorage:WaitForChild("shared"):WaitForChild("ModuleLoader"))
local ShieldAuraService = ModuleLoader.require("services/ShieldAuraService").new()
local ShieldAuraVariants = ModuleLoader.require("effects/ShieldAuraVariants")

local ShieldAuraTester = {}

function ShieldAuraTester.testNewShieldAura()
    local player = Players.LocalPlayer
    if not player then 
        warn("‚ùå ShieldAuraTester: –ò–≥—Ä–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return
    end
    
    print("üß™ === –¢–ï–°–¢ –ù–û–í–û–ô –°–ò–°–¢–ï–ú–´ –ê–£–†–´ –©–ò–¢–ê ===")
    print("üìÖ –í—Ä–µ–º—è –Ω–∞—á–∞–ª–∞:", os.date("%H:%M:%S"))
    
    if not player.Character then
        warn("‚ùå –ü–µ—Ä—Å–æ–Ω–∞–∂ –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return
    end
    
    -- –¢–µ—Å—Ç–∏—Ä—É–µ–º –º–≥–Ω–æ–≤–µ–Ω–Ω—É—é –∞–∫—Ç–∏–≤–∞—Ü–∏—é
    print("üõ°Ô∏è –°–æ–∑–¥–∞–µ–º –∞—É—Ä—É —â–∏—Ç–∞ —Å –º–≥–Ω–æ–≤–µ–Ω–Ω–æ–π –∞–∫—Ç–∏–≤–∞—Ü–∏–µ–π...")
    ShieldAuraService:createShieldAura(player, "test_shield", 10) -- 10 —Å–µ–∫—É–Ω–¥
    
    print("‚úÖ –ê—É—Ä–∞ —Å–æ–∑–¥–∞–Ω–∞! –ü—Ä–æ–≤–µ—Ä—å—Ç–µ:")
    print("  ‚Ä¢ –ü–æ—è–≤–ª—è–µ—Ç—Å—è –ª–∏ –∞—É—Ä–∞ –º–≥–Ω–æ–≤–µ–Ω–Ω–æ?")
    print("  ‚Ä¢ –°–ª–µ–¥—É–µ—Ç –ª–∏ –∑–∞ –∏–≥—Ä–æ–∫–æ–º –ø—Ä–∏ –¥–≤–∏–∂–µ–Ω–∏–∏?")
    print("  ‚Ä¢ –ï—Å—Ç—å –ª–∏ –ø–ª–∞–≤–Ω–∞—è –∞–Ω–∏–º–∞—Ü–∏—è –ø—É–ª—å—Å–∞—Ü–∏–∏?")
    print("  ‚Ä¢ –ù–µ –æ—Ç—Å—Ç–∞–µ—Ç –ª–∏ –æ—Ç –∏–≥—Ä–æ–∫–∞ –ø—Ä–∏ –±—ã—Å—Ç—Ä–æ–º –¥–≤–∏–∂–µ–Ω–∏–∏?")
    
    -- –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Ç–µ—Å—Ç –¥–≤–∏–∂–µ–Ω–∏—è
    spawn(function()
        print("üèÉ –ß–µ—Ä–µ–∑ 2 —Å–µ–∫—É–Ω–¥—ã –Ω–∞—á–Ω–µ—Ç—Å—è –∞–≤—Ç–æ—Ç–µ—Å—Ç –¥–≤–∏–∂–µ–Ω–∏—è...")
        wait(2)
        
        for i = 1, 5 do
            print("üîÑ –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–æ–∑–∏—Ü–∏–∏", i)
            ShieldAuraService:updateShieldPosition(player)
            wait(1)
        end
        
        print("‚úÖ –ê–≤—Ç–æ—Ç–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω")
    end)
end

function ShieldAuraTester.testVariantAuras()
    local player = Players.LocalPlayer
    if not player or not player.Character then 
        warn("‚ùå ShieldAuraTester: –ò–≥—Ä–æ–∫ –∏–ª–∏ –ø–µ—Ä—Å–æ–Ω–∞–∂ –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return
    end
    
    local humanoidRootPart = player.Character:FindFirstChild("HumanoidRootPart")
    if not humanoidRootPart then
        warn("‚ùå HumanoidRootPart –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return
    end
    
    print("üåü === –¢–ï–°–¢ –†–ê–ó–õ–ò–ß–ù–´–• –í–ê–†–ò–ê–ù–¢–û–í –ê–£–†–ê ===")
    
    local variants = ShieldAuraVariants.getAvailableVariants()
    print("üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã:", table.concat(variants, ", "))
    
    for i, variant in ipairs(variants) do
        local info = ShieldAuraVariants.getVariantInfo(variant)
        
        print(string.format("\nüé® –¢–ï–°–¢ %d/%d: %s", i, #variants, info.name))
        print("  üìù", info.description)
        print("  ‚ö° –ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å:", info.performance)
        
        -- –°–æ–∑–¥–∞–µ–º –∞—É—Ä—É
        local auraData = ShieldAuraVariants.createVariantAura(variant, humanoidRootPart)
        
        print("  ‚úÖ –ê—É—Ä–∞ —Å–æ–∑–¥–∞–Ω–∞, —Ç–µ—Å—Ç–∏—Ä—É–µ–º 3 —Å–µ–∫—É–Ω–¥—ã...")
        wait(3)
        
        -- –£–¥–∞–ª—è–µ–º –∞—É—Ä—É
        if auraData.shield then
            auraData.shield:Destroy()
        end
        
        for _, connection in ipairs(auraData.connections) do
            connection:Disconnect()
        end
        
        print("  üóëÔ∏è –ê—É—Ä–∞ —É–¥–∞–ª–µ–Ω–∞")
        
        if i < #variants then
            print("  ‚è±Ô∏è –ü–∞—É–∑–∞ 1 —Å–µ–∫ –ø–µ—Ä–µ–¥ —Å–ª–µ–¥—É—é—â–∏–º —Ç–µ—Å—Ç–æ–º...")
            wait(1)
        end
    end
    
    print("\nüéâ === –í–°–ï –í–ê–†–ò–ê–ù–¢–´ –ü–†–û–¢–ï–°–¢–ò–†–û–í–ê–ù–´ ===")
    print("–ö–∞–∫–æ–π –≤–∞—Ä–∏–∞–Ω—Ç –ø–æ–Ω—Ä–∞–≤–∏–ª—Å—è –±–æ–ª—å—à–µ –≤—Å–µ–≥–æ?")
end

function ShieldAuraTester.testPerformanceComparison()
    local player = Players.LocalPlayer
    if not player then return end
    
    print("üìä === –¢–ï–°–¢ –ü–†–û–ò–ó–í–û–î–ò–¢–ï–õ–¨–ù–û–°–¢–ò ===")
    
    -- –¢–µ—Å—Ç —Å—Ç–∞—Ä–æ–π —Å–∏—Å—Ç–µ–º—ã
    print("üîÑ –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å—Ç–∞—Ä—É—é —Å–∏—Å—Ç–µ–º—É...")
    local oldStart = tick()
    
    -- –ò–º–∏—Ç–∏—Ä—É–µ–º —Å—Ç–∞—Ä—É—é —Å–∏—Å—Ç–µ–º—É (—Å–æ–∑–¥–∞–Ω–∏–µ —á–∞—Å—Ç–∏ –∏ Heartbeat –±–µ–∑ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π)
    local testPart = Instance.new("Part")
    testPart.Shape = Enum.PartType.Ball
    testPart.Size = Vector3.new(8, 8, 8)
    testPart.Material = Enum.Material.ForceField
    testPart.CanCollide = false
    testPart.Anchored = true
    testPart.Parent = workspace
    
    local heartbeatCount = 0
    local oldConnection = game:GetService("RunService").Heartbeat:Connect(function()
        heartbeatCount = heartbeatCount + 1
        testPart.Transparency = 0.7 + math.sin(tick() * 3) * 0.2
    end)
    
    wait(2) -- –¢–µ—Å—Ç–∏—Ä—É–µ–º 2 —Å–µ–∫—É–Ω–¥—ã
    oldConnection:Disconnect()
    testPart:Destroy()
    
    local oldTime = tick() - oldStart
    print(string.format("üìà –°—Ç–∞—Ä–∞—è —Å–∏—Å—Ç–µ–º–∞: %.3f —Å–µ–∫, %d Heartbeat –≤—ã–∑–æ–≤–æ–≤", oldTime, heartbeatCount))
    
    -- –¢–µ—Å—Ç –Ω–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã
    print("üöÄ –¢–µ—Å—Ç–∏—Ä—É–µ–º –Ω–æ–≤—É—é —Å–∏—Å—Ç–µ–º—É...")
    local newStart = tick()
    
    ShieldAuraService:createShieldAura(player, "performance_test", 2)
    wait(2)
    
    local newTime = tick() - newStart
    print(string.format("üìâ –ù–æ–≤–∞—è —Å–∏—Å—Ç–µ–º–∞: %.3f —Å–µ–∫ (–æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–æ –¥–æ 20 FPS)", newTime))
    
    local improvement = ((heartbeatCount - 40) / heartbeatCount) * 100 -- 40 = 20 FPS * 2 —Å–µ–∫—É–Ω–¥—ã
    print(string.format("‚úÖ –£–ª—É—á—à–µ–Ω–∏–µ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏: ~%.1f%% –º–µ–Ω—å—à–µ –≤—ã–∑–æ–≤–æ–≤ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è", improvement))
end

function ShieldAuraTester.demonstrateInstantActivation()
    local player = Players.LocalPlayer
    if not player then return end
    
    print("‚ö° === –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø –ú–ì–ù–û–í–ï–ù–ù–û–ô –ê–ö–¢–ò–í–ê–¶–ò–ò ===")
    print("üéÆ –ù–∞–∂–º–∏—Ç–µ SPACE –¥–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –∞—É—Ä—ã")
    
    local UserInputService = game:GetService("UserInputService")
    
    local connection
    connection = UserInputService.InputBegan:Connect(function(input, gameProcessed)
        if gameProcessed then return end
        
        if input.KeyCode == Enum.KeyCode.Space then
            local activationTime = tick()
            print("üõ°Ô∏è –ê–ö–¢–ò–í–ê–¶–ò–Ø! –í—Ä–µ–º—è:", os.date("%H:%M:%S.") .. string.format("%03d", (activationTime % 1) * 1000))
            
            ShieldAuraService:createShieldAura(player, "instant_test", 5)
            
            local completionTime = tick()
            local delay = (completionTime - activationTime) * 1000 -- –≤ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥–∞—Ö
            
            print(string.format("‚úÖ –ê—É—Ä–∞ —Å–æ–∑–¥–∞–Ω–∞ –∑–∞ %.1f –º—Å", delay))
            
            if delay < 50 then
                print("üéâ –û–¢–õ–ò–ß–ù–û: –ú–≥–Ω–æ–≤–µ–Ω–Ω–∞—è –∞–∫—Ç–∏–≤–∞—Ü–∏—è!")
            elseif delay < 100 then
                print("‚úÖ –•–û–†–û–®–û: –ë—ã—Å—Ç—Ä–∞—è –∞–∫—Ç–∏–≤–∞—Ü–∏—è")
            else
                print("‚ö†Ô∏è –ú–ï–î–õ–ï–ù–ù–û: –¢—Ä–µ–±—É–µ—Ç—Å—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è")
            end
            
            connection:Disconnect()
        end
    end)
    
    print("‚åõ –û–∂–∏–¥–∞–Ω–∏–µ –Ω–∞–∂–∞—Ç–∏—è SPACE... (–∞–≤—Ç–æ–æ—Ç–º–µ–Ω–∞ —á–µ—Ä–µ–∑ 10 —Å–µ–∫)")
    
    spawn(function()
        wait(10)
        if connection then
            connection:Disconnect()
            print("‚è∞ –¢–µ—Å—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–≤–µ—Ä—à–µ–Ω")
        end
    end)
end

return ShieldAuraTester
