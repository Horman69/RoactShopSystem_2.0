--!strict
-- debug/GreenShieldTester.luau
-- –¢–µ—Å—Ç –∑–µ–ª–µ–Ω–æ–≥–æ —Ü–≤–µ—Ç–∞ –∞—É—Ä—ã —â–∏—Ç–∞

local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")

local GreenShieldTester = {}

function GreenShieldTester.testGreenShield()
    local player = Players.LocalPlayer
    if not player then 
        warn("‚ùå GreenShieldTester: –ò–≥—Ä–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return
    end
    
    print("üü¢ === –¢–ï–°–¢ –ó–ï–õ–ï–ù–û–ì–û –©–ò–¢–ê ===")
    print("üìÖ –í—Ä–µ–º—è:", os.date("%H:%M:%S"))
    
    -- –ó–∞–≥—Ä—É–∂–∞–µ–º –Ω–æ–≤—ã–π —Å–µ—Ä–≤–∏—Å –∞—É—Ä—ã
    local success, ShieldAuraService = pcall(function()
        local ModuleLoader = require(ReplicatedStorage:WaitForChild("shared"):WaitForChild("ModuleLoader"))
        return ModuleLoader.require("services/ShieldAuraService").new()
    end)
    
    if not success then
        warn("‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ ShieldAuraService:", ShieldAuraService)
        return
    end
    
    print("‚úÖ ShieldAuraService –∑–∞–≥—Ä—É–∂–µ–Ω —É—Å–ø–µ—à–Ω–æ")
    
    -- –°–æ–∑–¥–∞–µ–º –∑–µ–ª–µ–Ω—É—é –∞—É—Ä—É
    print("üü¢ –°–æ–∑–¥–∞–µ–º –∑–µ–ª–µ–Ω—É—é –∞—É—Ä—É —â–∏—Ç–∞...")
    ShieldAuraService:createShieldAura(player, "green_test", 10)
    
    print("‚úÖ –ó–µ–ª–µ–Ω–∞—è –∞—É—Ä–∞ —Å–æ–∑–¥–∞–Ω–∞!")
    print("üîç –ü—Ä–æ–≤–µ—Ä—å—Ç–µ:")
    print("  ‚Ä¢ –¶–≤–µ—Ç –∞—É—Ä—ã –∑–µ–ª–µ–Ω—ã–π (0, 255, 100)")
    print("  ‚Ä¢ –†–∞–∑–º–µ—Ä —É–≤–µ–ª–∏—á–µ–Ω (12x12x12)")
    print("  ‚Ä¢ –ü—Ä–æ–∑—Ä–∞—á–Ω–æ—Å—Ç—å –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–∞—è (~85%)")
    print("  ‚Ä¢ –ú—è–≥–∫–∞—è –ø—É–ª—å—Å–∞—Ü–∏—è")
    
    -- –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Ç–µ—Å—Ç —Ü–≤–µ—Ç–æ–≤
    spawn(function()
        wait(3)
        print("üîÑ –°—Ä–∞–≤–Ω–∏–≤–∞–µ–º —Å –¥—Ä—É–≥–∏–º–∏ —Ü–≤–µ—Ç–∞–º–∏...")
        
        -- –°–æ–∑–¥–∞–µ–º —Å–∏–Ω—é—é –∞—É—Ä—É –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è
        print("üîµ –°–æ–∑–¥–∞–µ–º —Å–∏–Ω—é—é –∞—É—Ä—É –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è...")
        
        -- –í—Ä–µ–º–µ–Ω–Ω–æ —Å–æ–∑–¥–∞–µ–º —Å–∏–Ω—é—é –∞—É—Ä—É (—Å—Ç–∞—Ä—ã–π —Ü–≤–µ—Ç)
        local blueAura = Instance.new("Part")
        blueAura.Name = "BlueShieldComparison"
        blueAura.Shape = Enum.PartType.Ball
        blueAura.Material = Enum.Material.ForceField
        blueAura.CanCollide = false
        blueAura.Anchored = true
        blueAura.Size = Vector3.new(12, 12, 12)
        blueAura.Color = Color3.fromRGB(0, 170, 255) -- –°—Ç–∞—Ä—ã–π —Å–∏–Ω–∏–π —Ü–≤–µ—Ç
        blueAura.Transparency = 0.85
        
        if player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
            blueAura.CFrame = player.Character.HumanoidRootPart.CFrame + Vector3.new(15, 0, 0) -- –°–±–æ–∫—É
            blueAura.Parent = workspace
            
            print("üîµ –°–∏–Ω—è—è –∞—É—Ä–∞ —Å–æ–∑–¥–∞–Ω–∞ —Å–±–æ–∫—É –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è")
            print("üü¢ –ó–µ–ª–µ–Ω–∞—è - –Ω–æ–≤—ã–π —Ü–≤–µ—Ç")
            print("üîµ –°–∏–Ω—è—è - —Å—Ç–∞—Ä—ã–π —Ü–≤–µ—Ç")
            
            wait(5)
            blueAura:Destroy()
            print("üóëÔ∏è –°–∏–Ω—è—è –∞—É—Ä–∞ —É–¥–∞–ª–µ–Ω–∞")
        end
    end)
end

function GreenShieldTester.testColorVariants()
    local player = Players.LocalPlayer
    if not player or not player.Character then return end
    
    print("üé® === –¢–ï–°–¢ –†–ê–ó–õ–ò–ß–ù–´–• –û–¢–¢–ï–ù–ö–û–í –ó–ï–õ–ï–ù–û–ì–û ===")
    
    local greenVariants = {
        {name = "–Ø—Ä–∫–∏–π –∑–µ–ª–µ–Ω—ã–π", color = Color3.fromRGB(0, 255, 100)},
        {name = "–õ–µ—Å–Ω–æ–π –∑–µ–ª–µ–Ω—ã–π", color = Color3.fromRGB(34, 139, 34)},
        {name = "–ù–µ–æ–Ω–æ–≤—ã–π –∑–µ–ª–µ–Ω—ã–π", color = Color3.fromRGB(57, 255, 20)},
        {name = "–¢–µ–º–Ω–æ-–∑–µ–ª–µ–Ω—ã–π", color = Color3.fromRGB(0, 100, 0)},
        {name = "–ò–∑—É–º—Ä—É–¥–Ω—ã–π", color = Color3.fromRGB(80, 200, 120)},
    }
    
    local humanoidRootPart = player.Character:FindFirstChild("HumanoidRootPart")
    if not humanoidRootPart then return end
    
    for i, variant in ipairs(greenVariants) do
        print(string.format("üü¢ –¢–µ—Å—Ç %d/%d: %s", i, #greenVariants, variant.name))
        
        -- –°–æ–∑–¥–∞–µ–º –∞—É—Ä—É –≤–∞—Ä–∏–∞–Ω—Ç–∞
        local testAura = Instance.new("Part")
        testAura.Name = "GreenVariant_" .. i
        testAura.Shape = Enum.PartType.Ball
        testAura.Material = Enum.Material.Neon
        testAura.CanCollide = false
        testAura.Anchored = true
        testAura.Size = Vector3.new(12, 12, 12)
        testAura.Color = variant.color
        testAura.Transparency = 0.85
        testAura.CFrame = humanoidRootPart.CFrame
        testAura.Parent = workspace
        
        -- –î–æ–±–∞–≤–ª—è–µ–º —Å–≤–µ—á–µ–Ω–∏–µ
        local light = Instance.new("PointLight")
        light.Color = variant.color
        light.Brightness = 1.5
        light.Range = 15
        light.Parent = testAura
        
        print("  ‚úÖ –°–æ–∑–¥–∞–Ω:", variant.name)
        wait(2)
        
        testAura:Destroy()
        print("  üóëÔ∏è –£–¥–∞–ª–µ–Ω")
        
        if i < #greenVariants then
            wait(0.5)
        end
    end
    
    print("üéâ –í—Å–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω—ã!")
    print("üü¢ –ö–∞–∫–æ–π –æ—Ç—Ç–µ–Ω–æ–∫ –∑–µ–ª–µ–Ω–æ–≥–æ –ø–æ–Ω—Ä–∞–≤–∏–ª—Å—è –±–æ–ª—å—à–µ?")
end

function GreenShieldTester.activateRealGreenShield()
    print("üü¢ === –ê–ö–¢–ò–í–ê–¶–ò–Ø –†–ï–ê–õ–¨–ù–û–ì–û –ó–ï–õ–ï–ù–û–ì–û –©–ò–¢–ê ===")
    
    local player = Players.LocalPlayer
    if not player then return end
    
    -- –ó–∞–≥—Ä—É–∂–∞–µ–º AbilityService
    local success, AbilityService = pcall(function()
        local ModuleLoader = require(ReplicatedStorage:WaitForChild("shared"):WaitForChild("ModuleLoader"))
        return ModuleLoader.require("services/AbilityService").new()
    end)
    
    if not success then
        warn("‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ AbilityService")
        return
    end
    
    -- –í—ã–¥–∞–µ–º —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å –µ—Å–ª–∏ –Ω–µ—Ç
    if not AbilityService:isAbilityOwned(player, "shield_aura") then
        AbilityService:grantAbility(player, "shield_aura")
        print("üîß –°–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å —â–∏—Ç–∞ –≤—ã–¥–∞–Ω–∞")
    end
    
    -- –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º —â–∏—Ç
    print("üöÄ –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –∑–µ–ª–µ–Ω—ã–π —â–∏—Ç —á–µ—Ä–µ–∑ —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å...")
    local result = AbilityService:activateAbility(player, "shield_aura")
    
    if result.success then
        print("‚úÖ –£–°–ü–ï–•: –ó–µ–ª–µ–Ω—ã–π —â–∏—Ç –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω!")
        print("üü¢ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∑–µ–ª–µ–Ω—É—é –∞—É—Ä—É –≤–æ–∫—Ä—É–≥ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞")
        print("üí¨", result.message)
    else
        print("‚ùå –û—à–∏–±–∫–∞ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏:", result.message)
    end
end

return GreenShieldTester
