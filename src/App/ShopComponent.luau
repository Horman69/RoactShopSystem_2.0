--!strict
-- src/App/ShopComponent.luau
-- –ö–æ–º–ø–æ–Ω–µ–Ω—Ç Roact –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –º–∞–≥–∞–∑–∏–Ω–∞ –∏ –ø–æ–∫—É–ø–∫–∏ —Ç–æ–≤–∞—Ä–æ–≤
-- –û–±–Ω–æ–≤–ª—ë–Ω –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –Ω–æ–≤–æ–π —Å–µ—Ä–≤–∏—Å–Ω–æ–π –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–æ–π

local ReplicatedStorage = game:GetService("ReplicatedStorage")
local TweenService = game:GetService("TweenService") -- –î–æ–±–∞–≤–ª—è–µ–º TweenService

-- –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —á–µ—Ä–µ–∑ ModuleLoader
local ModuleLoader = require(ReplicatedStorage:WaitForChild("shared"):WaitForChild("ModuleLoader"))
local Roact = ModuleLoader.require("Packages/roact")
local ShopService = ModuleLoader.require("services/ShopService")
local PlatformService = ModuleLoader.require("services/SimplePlatformService")
local ProductCard = ModuleLoader.require("App/ProductCard")
local AbilityCard = ModuleLoader.require("App/AbilityCard")
local WalletComponent = ModuleLoader.require("App/WalletComponent")

-- –¢–∏–ø—ã –∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
local Types = require(ReplicatedStorage:WaitForChild("shared"):WaitForChild("Types"))
local ShopConfig = require(ReplicatedStorage:WaitForChild("shared"):WaitForChild("ShopConfig"))
type Product = Types.Product
type ShopComponentProps = Types.ShopComponentProps

--[=[
	ShopComponent
	–ü—Ä–æ–ø—Å—ã:
	- onPurchase (function): —Ñ—É–Ω–∫—Ü–∏—è, –≤—ã–∑—ã–≤–∞–µ–º–∞—è –ø–æ—Å–ª–µ –ø–æ–ø—ã—Ç–∫–∏ –ø–æ–∫—É–ø–∫–∏
	- currentCoins (number): —Ç–µ–∫—É—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–æ–Ω–µ—Ç –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
]=]
local ShopComponent = Roact.Component:extend("ShopComponent")

function ShopComponent:init()
	-- –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø–µ—Ä–µ–¥–∞–Ω–Ω—ã–π —Å–µ—Ä–≤–∏—Å –∏–ª–∏ —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π (–¥–ª—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏)
	self.shopService = self.props.shopService or ShopService.new()
	self.soundService = self.props.soundService
	
	-- –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º PlatformService
	self.platformService = PlatformService.new()
	
	-- –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã
	self:updateProducts()
	
	-- –£–ë–†–ê–õ–ò: –ó–≤—É–∫ –æ—Ç–∫—Ä—ã—Ç–∏—è –º–∞–≥–∞–∑–∏–Ω–∞ —Ç–µ–ø–µ—Ä—å –≤–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—Å—è —Ç–æ–ª—å–∫–æ –≤ AppController
end

-- –û–±–Ω–æ–≤–∏—Ç—å —Å–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤
function ShopComponent:updateProducts()
	local Players = game:GetService("Players")
	local player = Players.LocalPlayer
	local availableProducts = self.shopService:getAvailableProducts(player)
	self:setState({
		products = availableProducts
	})
end

-- –û–±–Ω–æ–≤–ª—è–µ–º —Ç–æ–≤–∞—Ä—ã –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –ø—Ä–æ–ø—Å–æ–≤
function ShopComponent:didUpdate(previousProps)
	-- –ï—Å–ª–∏ –∏–∑–º–µ–Ω–∏–ª—Å—è updateTrigger, –æ–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤
	if self.props.updateTrigger ~= previousProps.updateTrigger then
		self:updateProducts()
	end
end

-- –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, –≤–ª–∞–¥–µ–µ—Ç –ª–∏ –∏–≥—Ä–æ–∫ —Ç–æ–≤–∞—Ä–æ–º
function ShopComponent:isProductOwned(product: Product): boolean
	local Players = game:GetService("Players")
	local player = Players.LocalPlayer
	
	-- –î–ª—è —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–µ–π –ø—Ä–æ–≤–µ—Ä—è–µ–º —á–µ—Ä–µ–∑ AbilityService
	if product.category == "ability" and product.abilityId then
		return self.shopService.abilityService:isAbilityOwned(player, product.abilityId)
	end
	
	-- –î–ª—è –¥—Ä—É–≥–∏—Ö —Ç–æ–≤–∞—Ä–æ–≤ (–ø–æ–∫–∞ —á—Ç–æ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º false)
	return false
end

-- –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, –º–æ–∂–µ—Ç –ª–∏ –∏–≥—Ä–æ–∫ –ø–æ–∑–≤–æ–ª–∏—Ç—å —Å–µ–±–µ —Ç–æ–≤–∞—Ä
function ShopComponent:canPlayerAfford(product: Product): boolean
	local Players = game:GetService("Players")
	local player = Players.LocalPlayer
	
	return self.shopService.currencyService:hasEnoughCoins(player, product.price)
end

function ShopComponent:render()
	local products = self.state.products or {}
	local productElements = {}
	
	-- üì± –ê–î–ê–ü–¢–ò–í–ù–´–ï –†–ê–ó–ú–ï–†–´ –ò–ó SHOPCONFIG
	local isMobile = self.platformService:isMobile()
	local responsiveConfig = ShopConfig.getResponsiveConfig(isMobile)
	local cardDimensions = ShopConfig.getCardDimensions(isMobile)
	local screenSize = self.platformService:getScreenSize()
	
	-- üéØ –†–ê–ó–ú–ï–†–´ –ö–û–ù–¢–ï–ô–ù–ï–†–ê –ò–ó SHOPCONFIG
	local containerConfig = responsiveConfig.container
	local containerWidth = isMobile and (screenSize.X * containerConfig.widthPercent) or containerConfig.width
	local containerHeight = isMobile and (screenSize.Y * containerConfig.heightPercent) or containerConfig.height
	
	-- –†–∞–∑–¥–µ–ª—è–µ–º —Ç–æ–≤–∞—Ä—ã –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
	local abilities = {}
	local otherProducts = {}
	
	for _, product in ipairs(products) do
		if product.category == "ability" then
			table.insert(abilities, product)
		else
			table.insert(otherProducts, product)
		end
	end
	
	local currentY = ShopConfig.design.spacing.gaps.medium
	local cardSpacing = ShopConfig.design.spacing.gaps.medium
	
	-- –°–Ω–∞—á–∞–ª–∞ —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏ (–µ—Å–ª–∏ –µ—Å—Ç—å)
	if #abilities > 0 then
		-- –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å–µ–∫—Ü–∏–∏ —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–µ–π
		local abilityCategory = ShopConfig.getCategoryConfig("ability")
		productElements["AbilitiesHeader"] = Roact.createElement("TextLabel", {
			Text = abilityCategory.name,
			Size = UDim2.new(1, -ShopConfig.design.spacing.padding.large, 0, ShopConfig.design.spacing.heights.header),
			Position = UDim2.new(0, ShopConfig.design.spacing.gaps.medium, 0, currentY),
			BackgroundTransparency = 1,
			TextColor3 = abilityCategory.color,
			TextSize = responsiveConfig.typography.header,
			Font = Enum.Font.GothamBlack,
			TextXAlignment = Enum.TextXAlignment.Center,
			TextYAlignment = Enum.TextYAlignment.Center,
		}, {
			UIStroke = Roact.createElement("UIStroke", {
				Color = abilityCategory.color,
				Thickness = 1,
				Transparency = 0.6,
			}),
		})
		
		currentY = currentY + ShopConfig.design.spacing.heights.header + ShopConfig.design.spacing.gaps.medium
		
		-- –ö–∞—Ä—Ç–æ—á–∫–∏ —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–µ–π
		for i, ability in ipairs(abilities) do
			local cardHeight = cardDimensions.height
			
			productElements["Ability" .. i] = Roact.createElement("Frame", {
				Size = UDim2.new(1, -ShopConfig.design.spacing.padding.large, 0, cardHeight),
				Position = UDim2.new(0, ShopConfig.design.spacing.gaps.medium, 0, currentY),
				BackgroundTransparency = 1,
			}, {
				AbilityCard = Roact.createElement(AbilityCard, {
					ability = ability,
					isOwned = self:isProductOwned(ability),
					canAfford = self:canPlayerAfford(ability),
					onPurchase = function(selectedAbility)
						-- –ó–≤—É–∫ –ø–æ–∫—É–ø–∫–∏ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—Å—è –≤ AppController
						if self.props.onPurchase then
							self.props.onPurchase(selectedAbility)
						end
					end,
				}),
			})
			
			-- –î–æ–±–∞–≤–ª—è–µ–º —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å –º–µ–∂–¥—É –∫–∞—Ä—Ç–æ—á–∫–∞–º–∏ (–∫—Ä–æ–º–µ –ø–æ—Å–ª–µ–¥–Ω–µ–π)
			if i < #abilities then
				productElements["AbilityDivider" .. i] = Roact.createElement("Frame", {
					Size = UDim2.new(1, -ShopConfig.design.spacing.padding.xlarge, 0, 1),
					Position = UDim2.new(0, ShopConfig.design.spacing.padding.large, 0, currentY + cardHeight + cardSpacing/2),
					BackgroundColor3 = ShopConfig.design.colors.divider,
					BorderSizePixel = 0,
				})
			end
			
			currentY = currentY + cardHeight + cardSpacing
		end
		
		currentY = currentY + ShopConfig.design.spacing.gaps.medium
	end
	
	-- –ü–æ—Ç–æ–º –æ—Å—Ç–∞–ª—å–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã (–µ—Å–ª–∏ –µ—Å—Ç—å)
	if #otherProducts > 0 then
		-- –ó–∞–≥–æ–ª–æ–≤–æ–∫ –¥–ª—è –¥—Ä—É–≥–∏—Ö —Ç–æ–≤–∞—Ä–æ–≤ (–µ—Å–ª–∏ –µ—Å—Ç—å —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏)
		if #abilities > 0 then
			productElements["OtherHeader"] = Roact.createElement("TextLabel", {
				Text = "üõí –î–†–£–ì–ò–ï –¢–û–í–ê–†–´",
				Size = UDim2.new(1, -ShopConfig.design.spacing.padding.large, 0, ShopConfig.design.spacing.heights.header),
				Position = UDim2.new(0, ShopConfig.design.spacing.gaps.medium, 0, currentY),
				BackgroundTransparency = 1,
				TextColor3 = ShopConfig.design.colors.text.primary, -- –¢–µ–º–Ω—ã–π —Ç–µ–∫—Å—Ç –Ω–∞ —Å–≤–µ—Ç–ª–æ–º —Ñ–æ–Ω–µ
				TextSize = responsiveConfig.typography.header,
				Font = Enum.Font.GothamBlack,
				TextXAlignment = Enum.TextXAlignment.Center,
				TextYAlignment = Enum.TextYAlignment.Center,
			}, {
				UIStroke = Roact.createElement("UIStroke", {
					Color = ShopConfig.design.colors.border, -- –û–±—ã—á–Ω–∞—è —Å–µ—Ä–∞—è –≥—Ä–∞–Ω–∏—Ü–∞
					Thickness = 1,
					Transparency = 0.3,
				}),
			})
			
			currentY = currentY + ShopConfig.design.spacing.heights.header + ShopConfig.design.spacing.gaps.medium
		end
		
		-- –û–±—ã—á–Ω—ã–µ –∫–∞—Ä—Ç–æ—á–∫–∏
		local cardHeight = cardDimensions.height
		
		for i, product in ipairs(otherProducts) do
			productElements["Product" .. i] = Roact.createElement("Frame", {
				Size = UDim2.new(1, -ShopConfig.design.spacing.padding.large, 0, cardHeight),
				Position = UDim2.new(0, ShopConfig.design.spacing.gaps.medium, 0, currentY),
				BackgroundTransparency = 1,
			}, {
				ProductCard = Roact.createElement(ProductCard, {
					product = product,
					isOwned = self:isProductOwned(product),
					canAfford = self:canPlayerAfford(product),
					onPurchase = function(selectedProduct)
						-- –ó–≤—É–∫ –ø–æ–∫—É–ø–∫–∏ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—Å—è –≤ AppController
						if self.props.onPurchase then
							self.props.onPurchase(selectedProduct)
						end
					end,
				}),
			})
			
			-- –î–æ–±–∞–≤–ª—è–µ–º —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å –º–µ–∂–¥—É –∫–∞—Ä—Ç–æ—á–∫–∞–º–∏ (–∫—Ä–æ–º–µ –ø–æ—Å–ª–µ–¥–Ω–µ–π)
			if i < #otherProducts then
				productElements["ProductDivider" .. i] = Roact.createElement("Frame", {
					Size = UDim2.new(1, -ShopConfig.design.spacing.padding.xlarge, 0, 1),
					Position = UDim2.new(0, ShopConfig.design.spacing.padding.large, 0, currentY + cardHeight + cardSpacing/2),
					BackgroundColor3 = ShopConfig.design.colors.divider,
					BorderSizePixel = 0,
				})
			end
			
			currentY = currentY + cardHeight + cardSpacing
		end
	end

	-- –§–∏–Ω–∞–ª—å–Ω–∞—è –≤—ã—Å–æ—Ç–∞ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
	local totalContentHeight = currentY + ShopConfig.design.spacing.gaps.medium
	
	return Roact.createElement("Frame", {
		Size = UDim2.new(0, containerWidth, 0, containerHeight),
		Position = UDim2.new(0.5, -containerWidth/2, 0.5, -containerHeight/2), -- –¶–µ–Ω—Ç—Ä–∏—Ä—É–µ–º –ø–æ —ç–∫—Ä–∞–Ω—É
		BackgroundColor3 = ShopConfig.design.colors.background,
		BackgroundTransparency = 0,
		BorderSizePixel = 0,
		Visible = self.props.visible,
	}, {
		-- ‚ú® –°–û–í–†–ï–ú–ï–ù–ù–û–ï –°–ö–†–£–ì–õ–ï–ù–ò–ï
		UICorner = Roact.createElement("UICorner", {
			CornerRadius = UDim.new(0, ShopConfig.design.borderRadius.xlarge),
		}),
		
		-- üåü –°–û–í–†–ï–ú–ï–ù–ù–´–ô –ì–†–ê–î–ò–ï–ù–¢ –§–û–ù–ê
		UIGradient = Roact.createElement("UIGradient", {
			Color = ColorSequence.new({
				ColorSequenceKeypoint.new(0, ShopConfig.design.colors.background),
				ColorSequenceKeypoint.new(1, Color3.fromRGB(10, 15, 30)), -- –¢–µ–º–Ω–µ–µ —Å–Ω–∏–∑—É
			}),
			Rotation = 180,
		}),
		
		-- üî∑ –°–í–ï–¢–Ø–©–ê–Ø–°–Ø –û–ë–í–û–î–ö–ê
		ModernBorder = Roact.createElement("UIStroke", {
			Color = ShopConfig.design.colors.borderAccent,
			Thickness = 2,
			Transparency = 0.5,
		}),
		
		-- üåü –≠–õ–ï–ì–ê–ù–¢–ù–ê–Ø –¢–ï–ù–¨ –î–õ–Ø –ì–õ–£–ë–ò–ù–´
		ContainerShadow = Roact.createElement("Frame", {
			Size = UDim2.new(1, 8, 1, 12),
			Position = UDim2.new(0, 4, 0, 6),
			BackgroundColor3 = ShopConfig.design.colors.shadow,
			BackgroundTransparency = 0.92,
			BorderSizePixel = 0,
			ZIndex = -1,
		}, {
			UICorner = Roact.createElement("UICorner", {
				CornerRadius = UDim.new(0, ShopConfig.design.borderRadius.xlarge),
			}),
		}),
		
		-- –£–±—Ä–∞–ª–∏ –ø–æ–ª–æ—Å–∫—É –¥–ª—è –±–æ–ª–µ–µ —á–∏—Å—Ç–æ–≥–æ –¥–∏–∑–∞–π–Ω–∞
		
		-- üè™ –ó–ê–ì–û–õ–û–í–û–ö –ú–ê–ì–ê–ó–ò–ù–ê (–∫—Ä—É–ø–Ω—ã–π, —Å–º–µ—â–µ–Ω –≤–ª–µ–≤–æ)
		Header = Roact.createElement("TextLabel", {
			Text = ShopConfig.shop.title,
			Size = UDim2.new(0.7, 0, 0, 65), -- –®–∏—Ä–∏–Ω–∞ 70% –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞, –≤—ã—Å–æ—Ç–∞ 65px
			Position = UDim2.new(0, 25, 0, 5), -- –°–º–µ—â–∞–µ–º –≤–ª–µ–≤–æ (–±—ã–ª–æ –ø–æ —Ü–µ–Ω—Ç—Ä—É)
			BackgroundTransparency = 1,
			TextXAlignment = Enum.TextXAlignment.Left, -- –í—ã—Ä–∞–≤–Ω–∏–≤–∞–Ω–∏–µ –ø–æ –ª–µ–≤–æ–º—É –∫—Ä–∞—é
			TextSize = responsiveConfig.typography.header + 4, -- –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Ä–∞–∑–º–µ—Ä –µ—â–µ –Ω–∞ 4px
			Font = Enum.Font.GothamBlack,
			TextColor3 = ShopConfig.design.colors.text.primary,
			TextStrokeTransparency = 0.3,
			TextStrokeColor3 = ShopConfig.design.colors.borderAccent,
		}),
		
		-- üí∞ –ö–û–ú–ü–ê–ö–¢–ù–´–ô –ö–û–®–ï–õ–ï–ö –í –ú–ê–ì–ê–ó–ò–ù–ï (–ø—Ä–∞–≤—ã–π –≤–µ—Ä—Ö–Ω–∏–π —É–≥–æ–ª)
		WalletDisplay = Roact.createElement("Frame", {
			Size = UDim2.new(0, ShopConfig.getCurrencyDisplayConfig().blockSize.width, 0, ShopConfig.getCurrencyDisplayConfig().blockSize.height),
			Position = UDim2.new(1, -(ShopConfig.getCurrencyDisplayConfig().blockSize.width + ShopConfig.getCurrencyDisplayConfig().rightOffset), 0, 15),
			BackgroundTransparency = 1,
		}, {
			Wallet = Roact.createElement(WalletComponent, {
				coins = self.props.currentCoins or 0,
				inShop = true,
			}),
		}),
		
		-- üíé –ú–ï–°–¢–û –î–õ–Ø –ê–õ–ú–ê–ó–û–í (–¥–ª—è –±—É–¥—É—â–µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è)
		GemsDisplay = Roact.createElement("Frame", {
			Size = UDim2.new(0, ShopConfig.getCurrencyDisplayConfig().blockSize.width, 0, ShopConfig.getCurrencyDisplayConfig().blockSize.height),
			Position = UDim2.new(1, -(ShopConfig.getCurrencyDisplayConfig().blockSize.width * 2 + ShopConfig.getCurrencyDisplayConfig().spacing + ShopConfig.getCurrencyDisplayConfig().rightOffset), 0, 15),
			BackgroundTransparency = 1,
			Visible = false, -- –ü–æ–∫–∞ —Å–∫—Ä—ã—Ç, –º–æ–∂–Ω–æ –±—É–¥–µ—Ç –≤–∫–ª—é—á–∏—Ç—å –ø–æ–∑–∂–µ
		}, {
			GemsLabel = Roact.createElement("TextLabel", {
				Text = "üíé 0", -- –ó–∞–≥–æ—Ç–æ–≤–∫–∞ –¥–ª—è –∞–ª–º–∞–∑–æ–≤
				Size = UDim2.new(1, 0, 1, 0),
				BackgroundTransparency = 0.2,
				BackgroundColor3 = Color3.fromRGB(20, 30, 45),
				TextColor3 = Color3.fromRGB(0, 191, 255), -- –ì–æ–ª—É–±–æ–π —Ü–≤–µ—Ç –¥–ª—è –∞–ª–º–∞–∑–æ–≤
				Font = Enum.Font.GothamBold,
				TextSize = ShopConfig.getCurrencyDisplayConfig().fontSize,
				TextXAlignment = Enum.TextXAlignment.Center,
				TextYAlignment = Enum.TextYAlignment.Center,
				BorderSizePixel = 0,
			}, {
				UICorner = Roact.createElement("UICorner", {
					CornerRadius = UDim.new(0, 6),
				}),
			}),
		}),
		
		-- üéØ –°–û–í–†–ï–ú–ï–ù–ù–ê–Ø –ö–ù–û–ü–ö–ê –ó–ê–ö–†–´–¢–ò–Ø
		CloseButton = Roact.createElement("TextButton", {
			Text = ShopConfig.shop.buttons.close,
			Size = UDim2.new(0, isMobile and 30 or 32, 0, isMobile and 30 or 32),
			Position = UDim2.new(1, isMobile and -38 or -45, 0, isMobile and 6 or 12),
			BackgroundColor3 = ShopConfig.design.colors.button.close,
			BackgroundTransparency = 0,
			TextSize = responsiveConfig.typography.button,
			Font = Enum.Font.GothamBlack,
			TextColor3 = Color3.fromRGB(255, 255, 255), -- –ë–µ–ª—ã–π —Ç–µ–∫—Å—Ç –Ω–∞ –∫—Ä–∞—Å–Ω–æ–π –∫–Ω–æ–ø–∫–µ
			AutoButtonColor = false,
			Modal = true, -- –î–û–ë–ê–í–õ–ï–ù–û: –æ—Ç–∫–ª—é—á–∞–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –∑–≤—É–∫–∏ Roblox
			[Roact.Event.Activated] = function()
				-- –í–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥–∏–º –∑–≤—É–∫ –∑–∞–∫—Ä—ã—Ç–∏—è –º–∞–≥–∞–∑–∏–Ω–∞
				if self.soundService then
					self.soundService:playShopClose()
				end
				
				if self.props.onClose then
					self.props.onClose()
				end
			end,
		}, {
			-- –°–∫—Ä—É–≥–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–∫–∏
			UICorner = Roact.createElement("UICorner", {
				CornerRadius = UDim.new(0, ShopConfig.design.borderRadius.round), -- –ö—Ä—É–≥–ª–∞—è –∫–Ω–æ–ø–∫–∞
			}),
			
			-- –¢–µ–Ω—å –∫–Ω–æ–ø–∫–∏
			ButtonShadow = Roact.createElement("Frame", {
				Size = UDim2.new(1, 2, 1, 4),
				Position = UDim2.new(0, 1, 0, 2),
				BackgroundColor3 = ShopConfig.design.colors.shadow,
				BackgroundTransparency = 0.85,
				BorderSizePixel = 0,
				ZIndex = -1,
			}, {
				UICorner = Roact.createElement("UICorner", {
					CornerRadius = UDim.new(0, ShopConfig.design.borderRadius.round),
				}),
			}),
		}),
		
		-- üìú –°–ö–†–û–õ–õ–ò–†–£–ï–ú–´–ô –ö–û–ù–¢–ï–ô–ù–ï–† –¢–û–í–ê–†–û–í
		ProductsList = Roact.createElement("ScrollingFrame", {
			Size = UDim2.new(1, -ShopConfig.design.spacing.gaps.medium, 1, -(ShopConfig.design.spacing.heights.header + ShopConfig.design.spacing.gaps.large)),
			Position = UDim2.new(0, ShopConfig.design.spacing.gaps.small, 0, ShopConfig.design.spacing.heights.header + ShopConfig.design.spacing.gaps.large),
			BackgroundTransparency = 1,
			BorderSizePixel = 0,
			CanvasSize = UDim2.new(0, 0, 0, totalContentHeight),
			ScrollBarThickness = isMobile and 8 or 12,
			ScrollBarImageColor3 = ShopConfig.design.colors.border,
			ScrollBarImageTransparency = 0.3,
			ScrollingEnabled = true,
			CanvasPosition = Vector2.new(0, 0),
		}, productElements)
	})
end

return ShopComponent
