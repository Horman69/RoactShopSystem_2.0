--!strict
-- src/services/ShieldAuraService.luau
-- –£–ª—É—á—à–µ–Ω–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –∞—É—Ä—ã —â–∏—Ç–∞ —Å –º–≥–Ω–æ–≤–µ–Ω–Ω–æ–π –∞–∫—Ç–∏–≤–∞—Ü–∏–µ–π –∏ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ–π –∞–Ω–∏–º–∞—Ü–∏–µ–π

local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local TweenService = game:GetService("TweenService")

local ModuleLoader = require(ReplicatedStorage:WaitForChild("shared"):WaitForChild("ModuleLoader"))

-- –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å —Å–µ—Ä–≤–∏—Å–∞ –∞—É—Ä—ã —â–∏—Ç–∞
type ShieldAuraServiceInterface = {
	createShieldAura: (self: ShieldAuraServiceInterface, player: Player, abilityId: string, duration: number) -> (),
	removeShieldAura: (self: ShieldAuraServiceInterface, player: Player, abilityId: string) -> (),
	removeAllShieldAuras: (self: ShieldAuraServiceInterface, player: Player) -> (),
	updateShieldPosition: (self: ShieldAuraServiceInterface, player: Player) -> (),
}

local ShieldAuraService = {} :: ShieldAuraServiceInterface
ShieldAuraService.__index = ShieldAuraService

-- –°–æ—Å—Ç–æ—è–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω—ã—Ö —â–∏—Ç–æ–≤
local activeShields: {[Player]: {[string]: {shield: Part, connection: RBXScriptConnection, tween: Tween?}}} = {}

-- –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
local SHIELD_CONFIG = {
	-- –í–∏–∑—É–∞–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
	SIZE = Vector3.new(12, 12, 12),
	SPHERE_COLOR = Color3.fromRGB(0, 255, 100), -- –Ø—Ä–∫–æ-–∑–µ–ª–µ–Ω–∞—è —Å—Ñ–µ—Ä–∞
	OUTLINE_COLOR = Color3.fromRGB(0, 200, 255), -- –ì–æ–ª—É–±–∞—è –æ–±–≤–æ–¥–∫–∞
	BASE_TRANSPARENCY = 0.85,
	PULSE_AMPLITUDE = 0.08,

	-- –ê–Ω–∏–º–∞—Ü–∏—è
	APPEAR_TIME = 0.3,
	DISAPPEAR_TIME = 0.4,
	PULSE_SPEED = 1.5,

	-- –ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å
	UPDATE_INTERVAL = 0.05,

	-- –≠—Ñ—Ñ–µ–∫—Ç—ã
	GLOW_BRIGHTNESS = 0.8,
	GLOW_RANGE = 16,
}

function ShieldAuraService.new(): ShieldAuraServiceInterface
	local self = setmetatable({}, ShieldAuraService)
	
	-- –ü–æ–¥–ø–∏—Å—ã–≤–∞–µ–º—Å—è –Ω–∞ —Å–æ–±—ã—Ç–∏—è –∏–≥—Ä–æ–∫–æ–≤
	Players.PlayerRemoving:Connect(function(player)
		self:removeAllShieldAuras(player)
	end)
	
	print("ShieldAuraService: –°–µ—Ä–≤–∏—Å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
	return self
end

-- –°–æ–∑–¥–∞—Ç—å –∞—É—Ä—É —â–∏—Ç–∞ —Å –º–≥–Ω–æ–≤–µ–Ω–Ω–æ–π –∞–∫—Ç–∏–≤–∞—Ü–∏–µ–π
function ShieldAuraService:createShieldAura(player: Player, abilityId: string, duration: number)
	-- –£–¥–∞–ª—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–π —â–∏—Ç –µ—Å–ª–∏ –µ—Å—Ç—å
	self:removeShieldAura(player, abilityId)
	
	local character = player.Character
	if not character then
		warn("ShieldAuraService: –ü–µ—Ä—Å–æ–Ω–∞–∂ –Ω–µ –Ω–∞–π–¥–µ–Ω –¥–ª—è", player.Name)
		return
	end
	
	local humanoidRootPart = character:FindFirstChild("HumanoidRootPart")
	if not humanoidRootPart then
		warn("ShieldAuraService: HumanoidRootPart –Ω–µ –Ω–∞–π–¥–µ–Ω –¥–ª—è", player.Name)
		return
	end
	
	print("üõ°Ô∏è ShieldAuraService: –°–æ–∑–¥–∞–µ–º –∞—É—Ä—É —â–∏—Ç–∞ –¥–ª—è", player.Name, "–Ω–∞", duration, "—Å–µ–∫")
	
	-- –°–æ–∑–¥–∞–µ–º –æ—Å–Ω–æ–≤–Ω—É—é —Å—Ñ–µ—Ä—É —â–∏—Ç–∞
	local shield = self:_createShieldSphere(humanoidRootPart)
	
	-- –î–æ–±–∞–≤–ª—è–µ–º —Å–≤–µ—á–µ–Ω–∏–µ
	self:_addShieldGlow(shield)
	
	-- –ú–≥–Ω–æ–≤–µ–Ω–Ω–æ –ø–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä—É–µ–º –Ω–∞ –∏–≥—Ä–æ–∫–µ
	shield.CFrame = humanoidRootPart.CFrame
	shield.Parent = workspace
	
	-- –ê–Ω–∏–º–∞—Ü–∏—è –ø–æ—è–≤–ª–µ–Ω–∏—è
	local appearTween = self:_createAppearAnimation(shield)
	appearTween:Play()
	
	-- –ó–∞–ø—É—Å–∫–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–æ–∑–∏—Ü–∏–∏ (–æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ)
	local connection = self:_startPositionUpdate(shield, humanoidRootPart)
	
	-- –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
	if not activeShields[player] then
		activeShields[player] = {}
	end
	
	activeShields[player][abilityId] = {
		shield = shield,
		connection = connection,
		tween = appearTween
	}
	
	-- –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ –∑–∞–¥–∞–Ω–Ω–æ–µ –≤—Ä–µ–º—è
	spawn(function()
		wait(duration)
		self:removeShieldAura(player, abilityId)
	end)
	
	print("‚úÖ ShieldAuraService: –ê—É—Ä–∞ —â–∏—Ç–∞ —Å–æ–∑–¥–∞–Ω–∞ –∏ –∞–∫—Ç–∏–≤–Ω–∞")
end

-- –£–¥–∞–ª–∏—Ç—å –∞—É—Ä—É —â–∏—Ç–∞ —Å –ø–ª–∞–≤–Ω–æ–π –∞–Ω–∏–º–∞—Ü–∏–µ–π
function ShieldAuraService:removeShieldAura(player: Player, abilityId: string)
	if not activeShields[player] or not activeShields[player][abilityId] then
		return
	end
	
	local shieldData = activeShields[player][abilityId]
	local shield = shieldData.shield
	
	print("üõ°Ô∏è ShieldAuraService: –£–¥–∞–ª—è–µ–º –∞—É—Ä—É —â–∏—Ç–∞ –¥–ª—è", player.Name)
	
	-- –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–æ–∑–∏—Ü–∏–∏
	if shieldData.connection then
		shieldData.connection:Disconnect()
	end
	
	-- –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â—É—é –∞–Ω–∏–º–∞—Ü–∏—é –µ—Å–ª–∏ –µ—Å—Ç—å
	if shieldData.tween then
		shieldData.tween:Cancel()
	end
	
	-- –ê–Ω–∏–º–∞—Ü–∏—è –∏—Å—á–µ–∑–Ω–æ–≤–µ–Ω–∏—è
	local disappearTween = TweenService:Create(shield, 
		TweenInfo.new(SHIELD_CONFIG.DISAPPEAR_TIME, Enum.EasingStyle.Quad, Enum.EasingDirection.In),
		{
			Transparency = 1,
			Size = Vector3.new(0.1, 0.1, 0.1)
		}
	)
	
	disappearTween.Completed:Connect(function()
		shield:Destroy()
	end)
	
	disappearTween:Play()
	
	-- –£–¥–∞–ª—è–µ–º –∏–∑ —Å–æ—Å—Ç–æ—è–Ω–∏—è
	activeShields[player][abilityId] = nil
	
	print("‚úÖ ShieldAuraService: –ê—É—Ä–∞ —â–∏—Ç–∞ —É–¥–∞–ª–µ–Ω–∞")
end

-- –£–¥–∞–ª–∏—Ç—å –≤—Å–µ –∞—É—Ä—ã —â–∏—Ç–æ–≤ –∏–≥—Ä–æ–∫–∞
function ShieldAuraService:removeAllShieldAuras(player: Player)
	if not activeShields[player] then
		return
	end
	
	for abilityId, _ in pairs(activeShields[player]) do
		self:removeShieldAura(player, abilityId)
	end
	
	activeShields[player] = nil
end

-- –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ–±–Ω–æ–≤–∏—Ç—å –ø–æ–∑–∏—Ü–∏—é —â–∏—Ç–æ–≤ (–¥–ª—è —Å–ª—É—á–∞–µ–≤ —Ç–µ–ª–µ–ø–æ—Ä—Ç–∞—Ü–∏–∏)
function ShieldAuraService:updateShieldPosition(player: Player)
	if not activeShields[player] then
		return
	end
	
	local character = player.Character
	if not character then return end
	
	local humanoidRootPart = character:FindFirstChild("HumanoidRootPart")
	if not humanoidRootPart then return end
	
	for _, shieldData in pairs(activeShields[player]) do
		if shieldData.shield and shieldData.shield.Parent then
			shieldData.shield.CFrame = humanoidRootPart.CFrame
		end
	end
end

-- PRIVATE: –°–æ–∑–¥–∞—Ç—å —Å—Ñ–µ—Ä—É —â–∏—Ç–∞
function ShieldAuraService:_createShieldSphere(humanoidRootPart: Part): Part
	local shield = Instance.new("Part")
	shield.Name = "ShieldAura_" .. tick() -- –£–Ω–∏–∫–∞–ª—å–Ω–æ–µ –∏–º—è
	   shield.Shape = Enum.PartType.Ball
	   shield.Material = Enum.Material.ForceField
	   shield.CanCollide = false
	   shield.Anchored = true
	   shield.Size = SHIELD_CONFIG.SIZE
	   shield.Color = SHIELD_CONFIG.SPHERE_COLOR -- –ó–µ–ª–µ–Ω–∞—è —Å—Ñ–µ—Ä–∞
	   shield.Transparency = 1
	   shield.CFrame = humanoidRootPart.CFrame
	   shield.TopSurface = Enum.SurfaceType.Smooth
	   shield.BottomSurface = Enum.SurfaceType.Smooth
	
	-- –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–≥ –¥–ª—è –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
	local stringValue = Instance.new("StringValue")
	stringValue.Name = "ShieldTag"
	stringValue.Value = "PlayerShield"
	stringValue.Parent = shield
	
	return shield
end

-- PRIVATE: –î–æ–±–∞–≤–∏—Ç—å —Å–≤–µ—á–µ–Ω–∏–µ –∫ —â–∏—Ç—É
function ShieldAuraService:_addShieldGlow(shield: Part)
	   -- –û—Å–Ω–æ–≤–Ω–æ–µ –º—è–≥–∫–æ–µ —Å–≤–µ—á–µ–Ω–∏–µ (—Ü–≤–µ—Ç —Å—Ñ–µ—Ä—ã)
	   local pointLight = Instance.new("PointLight")
	   pointLight.Color = SHIELD_CONFIG.SPHERE_COLOR
	   pointLight.Brightness = SHIELD_CONFIG.GLOW_BRIGHTNESS
	   pointLight.Range = SHIELD_CONFIG.GLOW_RANGE
	   pointLight.Parent = shield

	   --[[
	   -- –Ø—Ä–∫–∞—è –≥–æ–ª—É–±–∞—è –æ–±–≤–æ–¥–∫–∞ (–æ—Ç–∫–ª—é—á–µ–Ω–æ –≤—Ä–µ–º–µ–Ω–Ω–æ)
	   local selectionBox = Instance.new("SelectionBox")
	   selectionBox.Adornee = shield
	   selectionBox.Color3 = SHIELD_CONFIG.OUTLINE_COLOR
	   selectionBox.Transparency = 0.85 -- –ß—É—Ç—å –±–æ–ª–µ–µ –∑–∞–º–µ—Ç–Ω–∞—è
	   selectionBox.LineThickness = 0.12 -- –ß—É—Ç—å —Ç–æ–ª—â–µ
	   selectionBox.Parent = shield
	   --]]
end

-- PRIVATE: –°–æ–∑–¥–∞—Ç—å –∞–Ω–∏–º–∞—Ü–∏—é –ø–æ—è–≤–ª–µ–Ω–∏—è
function ShieldAuraService:_createAppearAnimation(shield: Part): Tween
	local tween = TweenService:Create(shield, 
		TweenInfo.new(SHIELD_CONFIG.APPEAR_TIME, Enum.EasingStyle.Back, Enum.EasingDirection.Out),
		{
			Transparency = SHIELD_CONFIG.BASE_TRANSPARENCY,
			Size = SHIELD_CONFIG.SIZE
		}
	)
	
	return tween
end

-- PRIVATE: –ó–∞–ø—É—Å—Ç–∏—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–æ–∑–∏—Ü–∏–∏ —Å –ø—É–ª—å—Å–∞—Ü–∏–µ–π
function ShieldAuraService:_startPositionUpdate(shield: Part, humanoidRootPart: Part): RBXScriptConnection
	local lastUpdate = 0
	local startTime = tick()
	
	local connection
	connection = RunService.Heartbeat:Connect(function()
		local currentTime = tick()
		
		-- –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–ª—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
		if currentTime - lastUpdate < SHIELD_CONFIG.UPDATE_INTERVAL then
			return
		end
		lastUpdate = currentTime
		
		-- –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –æ–±—ä–µ–∫—Ç—ã –µ—â–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç
		if not shield.Parent or not humanoidRootPart.Parent then
			if connection then
				connection:Disconnect()
			end
			return
		end
		
		-- –û–±–Ω–æ–≤–ª—è–µ–º –ø–æ–∑–∏—Ü–∏—é (—Å–ª–µ–¥—É–µ—Ç –∑–∞ –∏–≥—Ä–æ–∫–æ–º)
	   shield.CFrame = humanoidRootPart.CFrame

	   -- –ü–ª–∞–≤–Ω–∞—è –ø—É–ª—å—Å–∞—Ü–∏—è –ø—Ä–æ–∑—Ä–∞—á–Ω–æ—Å—Ç–∏ (–æ—á–µ–Ω—å –¥–µ–ª–∏–∫–∞—Ç–Ω–∞—è)
	   local elapsed = currentTime - startTime
	   local pulse = math.sin(elapsed * SHIELD_CONFIG.PULSE_SPEED) * SHIELD_CONFIG.PULSE_AMPLITUDE

	   -- –£–∑–∫–∏–π –¥–∏–∞–ø–∞–∑–æ–Ω –ø—Ä–æ–∑—Ä–∞—á–Ω–æ—Å—Ç–∏
	   local targetTransparency = SHIELD_CONFIG.BASE_TRANSPARENCY + pulse
	   targetTransparency = math.max(0.82, math.min(0.93, targetTransparency))

	   shield.Transparency = targetTransparency

	   -- –ú–µ–¥–ª–µ–Ω–Ω–æ–µ –≤—Ä–∞—â–µ–Ω–∏–µ
	   shield.CFrame = shield.CFrame * CFrame.Angles(0, elapsed * 0.15, 0)
	end)
	
	return connection
end

return ShieldAuraService
