--!strict
-- src/services/SimpleSoundService.luau
-- –ü—Ä–æ–¥–≤–∏–Ω—É—Ç–∞—è —Å–∏—Å—Ç–µ–º–∞ –∑–≤—É–∫–æ–≤ –¥–ª—è –º–∞–≥–∞–∑–∏–Ω–∞ –∏ —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–µ–π
-- –í–µ—Ä—Å–∏—è 2.1 —Å –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–æ–π –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –∏ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–µ–π

local SoundService = game:GetService("SoundService")
local ContentProvider = game:GetService("ContentProvider")

local SimpleSoundService = {}
SimpleSoundService.__index = SimpleSoundService

-- –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∑–≤—É–∫–æ–≤
local SOUND_CONFIG = {
	-- –ó–≤—É–∫–∏ –º–∞–≥–∞–∑–∏–Ω–∞
	shop = {
		open = "rbxassetid://242135745",     -- –û—Ç–∫—Ä—ã—Ç–∏–µ –º–∞–≥–∞–∑–∏–Ω–∞
		close = "rbxassetid://242135745",    -- –ó–∞–∫—Ä—ã—Ç–∏–µ –º–∞–≥–∞–∑–∏–Ω–∞
		purchase = "rbxassetid://14621507602", -- –ü–æ–∫—É–ø–∫–∞ (–ù–û–í–´–ô –ó–í–£–ö)
	},
	
	-- –ó–≤—É–∫–∏ —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–µ–π
	abilities = {
		activate = "rbxassetid://119289373229825", -- –ê–∫—Ç–∏–≤–∞—Ü–∏—è —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏
		active = "rbxassetid://107261392908541",   -- –°–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å —Å–Ω–æ–≤–∞ –∞–∫—Ç–∏–≤–Ω–∞ (–≤—Å–µ–≥–¥–∞ —á–µ—Ä–µ–∑ 30 —Å–µ–∫) - –ù–û–í–´–ô –ó–í–£–ö
		deactivate = "rbxassetid://17628141786",   -- –°–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç—Å—è (—á–µ—Ä–µ–∑ 15 —Å–µ–∫)
		cooldown = "rbxassetid://104184340183231", -- –ü–æ–ø—ã—Ç–∫–∞ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –≤–æ –≤—Ä–µ–º—è –∫—É–ª–¥–∞—É–Ω–∞
	},
	
	-- –ù–∞—Å—Ç—Ä–æ–π–∫–∏
	volume = 0.5,
	enabled = true,
	debug = true, -- –í–∫–ª—é—á–∏—Ç—å –¥–µ—Ç–∞–ª—å–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
}

-- –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä
function SimpleSoundService.new()
	local self = setmetatable({}, SimpleSoundService)
	
	-- –ö—ç—à –¥–ª—è –∑–≤—É–∫–æ–≤ –∏ –º–µ—Ç—Ä–∏–∫–∏ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
	self.preloadedSounds = {}
	self.soundPoolSize = {}
	self.performanceMetrics = {
		totalCalls = 0,
		averageLatency = 0,
		maxLatency = 0,
		cacheHits = 0,
		cacheMisses = 0,
	}
	
	-- –ü—Ä–µ–¥–∑–∞–≥—Ä—É–∂–∞–µ–º –≤—Å–µ –∑–≤—É–∫–∏ –¥–ª—è —É—Å—Ç—Ä–∞–Ω–µ–Ω–∏—è –∑–∞–¥–µ—Ä–∂–µ–∫
	self:preloadAllSounds()
	
	-- –°–æ–∑–¥–∞–µ–º –ø—É–ª –∑–≤—É–∫–æ–≤ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Ç–∏–ø–∞ (–¥–ª—è –ø–æ–ª–Ω–æ–≥–æ —É—Å—Ç—Ä–∞–Ω–µ–Ω–∏—è –∑–∞–¥–µ—Ä–∂–µ–∫)
	self:createSoundPools()
	
	return self
end

-- –ü—Ä–µ–¥–∑–∞–≥—Ä—É–∑–∫–∞ –≤—Å–µ—Ö –∑–≤—É–∫–æ–≤ —á–µ—Ä–µ–∑ ContentProvider (–º–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Å–∫–æ—Ä–æ—Å—Ç—å)
function SimpleSoundService:preloadAllSounds()
	local startTime = tick()
	local allSounds = {}
	local soundIds = {}
	
	-- –°–æ–±–∏—Ä–∞–µ–º –≤—Å–µ ID –∑–≤—É–∫–æ–≤
	for category, sounds in pairs(SOUND_CONFIG) do
		if type(sounds) == "table" and category ~= "volume" and category ~= "enabled" and category ~= "debug" then
			for soundType, soundId in pairs(sounds) do
				if type(soundId) == "string" and soundId ~= "" then
					table.insert(allSounds, soundId)
					table.insert(soundIds, soundId)
				end
			end
		end
	end
	
	-- –ö–†–ò–¢–ò–ß–ï–°–ö–ò –í–ê–ñ–ù–û: –ò—Å–ø–æ–ª—å–∑—É–µ–º ContentProvider –¥–ª—è –ø—Ä–µ–¥–∑–∞–≥—Ä—É–∑–∫–∏
	spawn(function()
		local success, err = pcall(function()
			ContentProvider:PreloadAsync(soundIds)
		end)
		
		if success then
			if SOUND_CONFIG.debug then
				print("üîä SimpleSoundService: ContentProvider –ø—Ä–µ–¥–∑–∞–≥—Ä—É–∑–∏–ª", #soundIds, "–∑–≤—É–∫–æ–≤ –∑–∞", math.round((tick() - startTime) * 1000), "–º—Å")
			end
		else
			warn("‚ö†Ô∏è SimpleSoundService: –û—à–∏–±–∫–∞ –ø—Ä–µ–¥–∑–∞–≥—Ä—É–∑–∫–∏ ContentProvider:", err)
		end
	end)
	
	-- –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç—ã Sound –¥–ª—è –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏—è
	for _, soundId in ipairs(allSounds) do
		local sound = Instance.new("Sound")
		sound.SoundId = soundId
		sound.Volume = 0 -- –ë–µ–∑–∑–≤—É—á–Ω–æ —Å–æ–∑–¥–∞–µ–º
		sound.Parent = SoundService
		
		-- –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–ª—è –ø–µ—Ä–µ–∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
		self.preloadedSounds[soundId] = sound
		self.soundPoolSize[soundId] = 1
	end
	
	if SOUND_CONFIG.debug then
		print("üîä SimpleSoundService: –°–æ–∑–¥–∞–Ω–æ", #allSounds, "–æ–±—ä–µ–∫—Ç–æ–≤ Sound –∑–∞", math.round((tick() - startTime) * 1000), "–º—Å")
	end
end

-- –°–æ–∑–¥–∞–Ω–∏–µ –ø—É–ª–∞ –∑–≤—É–∫–æ–≤ –¥–ª—è –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö —Å–æ–±—ã—Ç–∏–π (–ø–æ–∫—É–ø–∫–∞, –∞–∫—Ç–∏–≤–∞—Ü–∏—è —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–µ–π)
function SimpleSoundService:createSoundPools()
	local criticalSounds = {
		SOUND_CONFIG.shop.purchase,
		SOUND_CONFIG.abilities.activate,
		SOUND_CONFIG.abilities.cooldown
	}
	
	-- –°–æ–∑–¥–∞–µ–º –ø–æ 3 –∫–æ–ø–∏–∏ –∫–∞–∂–¥–æ–≥–æ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–æ–≥–æ –∑–≤—É–∫–∞
	for _, soundId in ipairs(criticalSounds) do
		if soundId and soundId ~= "" then
			for i = 2, 3 do -- –£–∂–µ –µ—Å—Ç—å 1 –∫–æ–ø–∏—è, —Å–æ–∑–¥–∞–µ–º –µ—â–µ 2
				local sound = Instance.new("Sound")
				sound.SoundId = soundId
				sound.Volume = 0
				sound.Parent = SoundService
				
				-- –î–æ–±–∞–≤–ª—è–µ–º –≤ –ø—É–ª
				local poolKey = soundId .. "_" .. i
				self.preloadedSounds[poolKey] = sound
				self.soundPoolSize[soundId] = (self.soundPoolSize[soundId] or 1) + 1
			end
		end
	end
	
	if SOUND_CONFIG.debug then
		print("üîä SimpleSoundService: –°–æ–∑–¥–∞–Ω –ø—É–ª –¥–ª—è –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –∑–≤—É–∫–æ–≤")
	end
end

-- –ú–ê–ö–°–ò–ú–ê–õ–¨–ù–û –ë–´–°–¢–†–´–ô –º–µ—Ç–æ–¥ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è –∑–≤—É–∫–∞ —Å –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–æ–π
function SimpleSoundService:playSound(soundId: string, volume: number?)
	if not SOUND_CONFIG.enabled or not soundId or soundId == "" then
		return
	end
	
	local startTime = tick()
	self.performanceMetrics.totalCalls += 1
	
	-- –ò—â–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–π –∑–≤—É–∫ –≤ –ø—É–ª–µ
	local sound = nil
	local poolSize = self.soundPoolSize[soundId] or 1
	
	-- –°–Ω–∞—á–∞–ª–∞ –∏—â–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π –∑–≤—É–∫
	local mainSound = self.preloadedSounds[soundId]
	if mainSound and not mainSound.IsPlaying then
		sound = mainSound
		self.performanceMetrics.cacheHits += 1
	else
		-- –ò—â–µ–º –≤ –ø—É–ª–µ –∫–æ–ø–∏–π
		for i = 2, poolSize do
			local poolSound = self.preloadedSounds[soundId .. "_" .. i]
			if poolSound and not poolSound.IsPlaying then
				sound = poolSound
				self.performanceMetrics.cacheHits += 1
				break
			end
		end
		
		-- –ï—Å–ª–∏ –≤—Å–µ –∑–≤—É–∫–∏ –∑–∞–Ω—è—Ç—ã, —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π (—Ä–µ–¥–∫–∏–π —Å–ª—É—á–∞–π)
		if not sound then
			sound = Instance.new("Sound")
			sound.SoundId = soundId
			sound.Parent = SoundService
			self.performanceMetrics.cacheMisses += 1
			
			if SOUND_CONFIG.debug then
				warn("‚ö†Ô∏è SimpleSoundService: –°–æ–∑–¥–∞–Ω –Ω–æ–≤—ã–π –∑–≤—É–∫ –¥–ª—è", soundId, "- –≤—Å–µ –∫–æ–ø–∏–∏ –∑–∞–Ω—è—Ç—ã")
			end
		end
	end
	
	-- –ú–≥–Ω–æ–≤–µ–Ω–Ω–æ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥–∏–º
	sound.Volume = volume or SOUND_CONFIG.volume
	sound:Play()
	
	-- –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
	local latency = (tick() - startTime) * 1000
	self.performanceMetrics.maxLatency = math.max(self.performanceMetrics.maxLatency, latency)
	self.performanceMetrics.averageLatency = (self.performanceMetrics.averageLatency + latency) / 2
	
	if SOUND_CONFIG.debug and latency > 1 then -- –õ–æ–≥–∏—Ä—É–µ–º —Ç–æ–ª—å–∫–æ –∑–∞–¥–µ—Ä–∂–∫–∏ > 1–º—Å
		print("üîä –ó–≤—É–∫ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω –∑–∞", math.round(latency * 100) / 100, "–º—Å | ID:", soundId)
	end
end

-- –ü–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
function SimpleSoundService:getPerformanceStats()
	return {
		totalCalls = self.performanceMetrics.totalCalls,
		averageLatency = math.round(self.performanceMetrics.averageLatency * 100) / 100,
		maxLatency = math.round(self.performanceMetrics.maxLatency * 100) / 100,
		cacheHitRate = math.round((self.performanceMetrics.cacheHits / math.max(self.performanceMetrics.totalCalls, 1)) * 100),
		cacheMisses = self.performanceMetrics.cacheMisses,
	}
end

-- –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ (–º–æ–∂–Ω–æ –≤—ã–∑–≤–∞—Ç—å –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏)
function SimpleSoundService:printStats()
	local stats = self:getPerformanceStats()
	print("üìä SimpleSoundService –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:")
	print("   –í—Å–µ–≥–æ –≤—ã–∑–æ–≤–æ–≤:", stats.totalCalls)
	print("   –°—Ä–µ–¥–Ω—è—è –∑–∞–¥–µ—Ä–∂–∫–∞:", stats.averageLatency, "–º—Å")
	print("   –ú–∞–∫—Å. –∑–∞–¥–µ—Ä–∂–∫–∞:", stats.maxLatency, "–º—Å")
	print("   –ü–æ–ø–∞–¥–∞–Ω–∏—è –≤ –∫—ç—à:", stats.cacheHitRate, "%")
	print("   –ü—Ä–æ–º–∞—Ö–∏ –∫—ç—à–∞:", stats.cacheMisses)
end

-- === –ó–í–£–ö–ò –ú–ê–ì–ê–ó–ò–ù–ê ===
function SimpleSoundService:playShopOpen()
	self:playSound(SOUND_CONFIG.shop.open)
end

function SimpleSoundService:playShopClose()
	self:playSound(SOUND_CONFIG.shop.close)
end

function SimpleSoundService:playPurchaseSound()
	self:playSound(SOUND_CONFIG.shop.purchase)
end

-- === –ó–í–£–ö–ò –°–ü–û–°–û–ë–ù–û–°–¢–ï–ô ===
function SimpleSoundService:playAbilityActivate()
	if SOUND_CONFIG.debug then
		print("üîä SimpleSoundService: –í–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—Å—è –∑–≤—É–∫ '–∞–∫—Ç–∏–≤–∞—Ü–∏—è —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏' ID:", SOUND_CONFIG.abilities.activate)
	end
	self:playSound(SOUND_CONFIG.abilities.activate)
end

function SimpleSoundService:playAbilityActive()
	if SOUND_CONFIG.debug then
		print("üîä SimpleSoundService: –í–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—Å—è –∑–≤—É–∫ '—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å —Å–Ω–æ–≤–∞ –∞–∫—Ç–∏–≤–Ω–∞' ID:", SOUND_CONFIG.abilities.active)
	end
	self:playSound(SOUND_CONFIG.abilities.active)
end

function SimpleSoundService:playAbilityDeactivate()
	if SOUND_CONFIG.debug then
		print("üîä SimpleSoundService: –í–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—Å—è –∑–≤—É–∫ '–¥–µ–∞–∫—Ç–∏–≤–∞—Ü–∏—è —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏' ID:", SOUND_CONFIG.abilities.deactivate)
	end
	self:playSound(SOUND_CONFIG.abilities.deactivate)
end

function SimpleSoundService:playAbilityCooldown()
	if SOUND_CONFIG.debug then
		print("üîä SimpleSoundService: –í–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—Å—è –∑–≤—É–∫ '–∫—É–ª–¥–∞—É–Ω —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏' ID:", SOUND_CONFIG.abilities.cooldown)
	end
	self:playSound(SOUND_CONFIG.abilities.cooldown)
end

-- –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ
function SimpleSoundService:setEnabled(enabled: boolean)
	SOUND_CONFIG.enabled = enabled
	if SOUND_CONFIG.debug then
		print("üîä SimpleSoundService: –ó–≤—É–∫–∏", enabled and "–≤–∫–ª—é—á–µ–Ω—ã" or "–≤—ã–∫–ª—é—á–µ–Ω—ã")
	end
end

function SimpleSoundService:setVolume(volume: number)
	SOUND_CONFIG.volume = math.clamp(volume, 0, 1)
	if SOUND_CONFIG.debug then
		print("üîä SimpleSoundService: –ì—Ä–æ–º–∫–æ—Å—Ç—å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –Ω–∞", SOUND_CONFIG.volume)
	end
end

function SimpleSoundService:setDebug(enabled: boolean)
	SOUND_CONFIG.debug = enabled
	print("üîä SimpleSoundService: –û—Ç–ª–∞–¥–∫–∞", enabled and "–≤–∫–ª—é—á–µ–Ω–∞" or "–≤—ã–∫–ª—é—á–µ–Ω–∞")
end

-- –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Å–µ—Ö –∑–≤—É–∫–æ–≤ (–¥–ª—è –æ—Ç–ª–∞–¥–∫–∏)
function SimpleSoundService:testAllSounds()
	print("üîä –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Å–µ—Ö –∑–≤—É–∫–æ–≤...")
	
	local testSequence = {
		{sound = "shop.open", delay = 0.5, description = "–û—Ç–∫—Ä—ã—Ç–∏–µ –º–∞–≥–∞–∑–∏–Ω–∞"},
		{sound = "shop.purchase", delay = 0.5, description = "–ü–æ–∫—É–ø–∫–∞ —Ç–æ–≤–∞—Ä–∞"},
		{sound = "abilities.activate", delay = 0.5, description = "–ê–∫—Ç–∏–≤–∞—Ü–∏—è —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏"},
		{sound = "abilities.active", delay = 0.5, description = "–°–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å —Å–Ω–æ–≤–∞ –∞–∫—Ç–∏–≤–Ω–∞ (30 —Å–µ–∫)"},
		{sound = "abilities.deactivate", delay = 0.5, description = "–î–µ–∞–∫—Ç–∏–≤–∞—Ü–∏—è —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏"},
		{sound = "abilities.cooldown", delay = 0.5, description = "–ö—É–ª–¥–∞—É–Ω —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏"},
		{sound = "shop.close", delay = 0, description = "–ó–∞–∫—Ä—ã—Ç–∏–µ –º–∞–≥–∞–∑–∏–Ω–∞"},
	}
	
	spawn(function()
		for i, test in ipairs(testSequence) do
			local parts = test.sound:split(".")
			local category, soundType = parts[1], parts[2]
			local soundId = SOUND_CONFIG[category] and SOUND_CONFIG[category][soundType]
			
			if soundId then
				print("   –¢–µ—Å—Ç", i, "- –ó–≤—É–∫:", test.description, "(ID:", soundId, ")")
				self:playSound(soundId, 0.3)
			else
				warn("   –¢–µ—Å—Ç", i, "- –ó–≤—É–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω:", test.sound)
			end
			
			if test.delay > 0 then
				wait(test.delay)
			end
		end
		
		wait(1)
		self:printStats()
	end)
end

return SimpleSoundService