--!strict
-- src/client/TestJumpHeight.client.luau
-- –¢–µ—Å—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–π —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏ –ø—Ä—ã–∂–∫–∞ (JumpHeight)

local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Players = game:GetService("Players")

wait(3)

local player = Players.LocalPlayer
if not player.Character or not player.Character:FindFirstChild("Humanoid") then
	return
end

local humanoid = player.Character.Humanoid

print("ü¶ò –¢–µ—Å—Ç —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏ –ø—Ä—ã–∂–∫–∞ (JumpHeight):")
print("  –ù–∞—á–∞–ª—å–Ω–∞—è –≤—ã—Å–æ—Ç–∞ –ø—Ä—ã–∂–∫–∞:", humanoid.JumpHeight)

-- –ò–º–ø–æ—Ä—Ç –∏ —Å–æ–∑–¥–∞–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–∞
local ModuleLoader = require(ReplicatedStorage.shared.ModuleLoader)
local AbilityService = ModuleLoader.require("services/AbilityService")
local abilityService = AbilityService.new()

wait(2)

-- –¢–µ—Å—Ç –ø—Ä—ã–∂–∫–∞
local result = abilityService:activateAbility(player, "jump_boost")
if result.success then
	print("‚úÖ –°–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å –ø—Ä—ã–∂–∫–∞ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞!")
	wait(1)
	print("  –ù–æ–≤–∞—è –≤—ã—Å–æ—Ç–∞ –ø—Ä—ã–∂–∫–∞:", humanoid.JumpHeight)
	print("  –£–≤–µ–ª–∏—á–µ–Ω–∏–µ –≤:", humanoid.JumpHeight / 7.2, "—Ä–∞–∑")
	print("  –≠—Ñ—Ñ–µ–∫—Ç –∑–∞–≤–µ—Ä—à–∏—Ç—Å—è —á–µ—Ä–µ–∑ 15 —Å–µ–∫—É–Ω–¥")
	
	-- –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∫–∞–∂–¥—ã–µ 3 —Å–µ–∫—É–Ω–¥—ã
	for i = 1, 5 do
		wait(3)
		print(string.format("  [%d —Å–µ–∫] –í—ã—Å–æ—Ç–∞ –ø—Ä—ã–∂–∫–∞: %.1f", i * 3, humanoid.JumpHeight))
	end
	
	print("  –≠—Ñ—Ñ–µ–∫—Ç –¥–æ–ª–∂–µ–Ω –±—ã–ª –∑–∞–≤–µ—Ä—à–∏—Ç—å—Å—è")
	print("  –§–∏–Ω–∞–ª—å–Ω–∞—è –≤—ã—Å–æ—Ç–∞ –ø—Ä—ã–∂–∫–∞:", humanoid.JumpHeight)
	
	if math.abs(humanoid.JumpHeight - 7.2) < 0.1 then
		print("üéâ –¢–ï–°–¢ –ü–†–û–ô–î–ï–ù! –ü—Ä—ã–∂–æ–∫ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏–ª—Å—è –∫ –±–∞–∑–æ–≤–æ–º—É –∑–Ω–∞—á–µ–Ω–∏—é")
	else
		print("‚ùå –¢–ï–°–¢ –ù–ï –ü–†–û–ô–î–ï–ù! –ü—Ä—ã–∂–æ–∫ –Ω–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏–ª—Å—è")
	end
else
	print("‚ùå –û—à–∏–±–∫–∞:", result.message)
end
