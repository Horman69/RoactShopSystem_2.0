--!strict
-- src/shared/AbilityData.luau
-- –î–∞–Ω–Ω—ã–µ —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–µ–π –¥–ª—è –º–∞–≥–∞–∑–∏–Ω–∞
-- –°–æ–¥–µ—Ä–∂–∏—Ç –±–∞–∑–æ–≤—ã–µ —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏: –ë–µ–≥, –©–∏—Ç, –ü—Ä—ã–∂–æ–∫

local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Types = require(ReplicatedStorage:WaitForChild("shared"):WaitForChild("Types"))

type Ability = Types.Ability
type AbilityList = Types.AbilityList

-- –î–∞–Ω–Ω—ã–µ —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–µ–π
local ABILITIES: AbilityList = {
	{
		id = "speed_boost",
		name = "üèÉ –£—Å–∫–æ—Ä–µ–Ω–∏–µ",
		description = "–£–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç —Å–∫–æ—Ä–æ—Å—Ç—å –±–µ–≥–∞ –¥–æ 32 –Ω–∞ 15 —Å–µ–∫—É–Ω–¥",
		category = "Movement",
		baseDuration = 15, -- 15 —Å–µ–∫—É–Ω–¥ –±–∞–∑–æ–≤–æ
		cooldown = 30, -- 30 —Å–µ–∫—É–Ω–¥ –∫—É–ª–¥–∞—É–Ω
		price = 50, -- 50 –º–æ–Ω–µ—Ç
		effects = {
			{
				type = "Set",
				value = 32, -- –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–∫–æ—Ä–æ—Å—Ç—å 32 (16 * 2)
				target = "WalkSpeed"
			}
		},
		icon = "üèÉ",
		isStackable = false, -- –ù–µ–ª—å–∑—è —Å—Ç–∞–∫–∞—Ç—å —É—Å–∫–æ—Ä–µ–Ω–∏–µ
	},
	
	{
		id = "shield_aura",
		name = "üõ°Ô∏è –©–∏—Ç",
		description = "–°–æ–∑–¥–∞–µ—Ç –∑–∞—â–∏—Ç–Ω—É—é –∞—É—Ä—É –≤–æ–∫—Ä—É–≥ –∏–≥—Ä–æ–∫–∞ –Ω–∞ 15 —Å–µ–∫—É–Ω–¥", 
		category = "Shield",
		baseDuration = 15,
		cooldown = 30, -- 30 —Å–µ–∫—É–Ω–¥ –∫—É–ª–¥–∞—É–Ω
		price = 75, -- –î–æ—Ä–æ–∂–µ —á–µ–º –±–µ–≥
		effects = {
			{
				type = "Add",
				value = 50, -- +50 –∫ –∑–∞—â–∏—Ç–µ
				target = "Shield"
			}
		},
		icon = "üõ°Ô∏è",
		isStackable = true, -- –ú–æ–∂–Ω–æ —Å—Ç–∞–∫–∞—Ç—å —â–∏—Ç—ã
	},
	
	{
		id = "jump_boost",
		name = "‚¨ÜÔ∏è –°—É–ø–µ—Ä –ø—Ä—ã–∂–æ–∫",
		description = "–£–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç –≤—ã—Å–æ—Ç—É –ø—Ä—ã–∂–∫–∞ –≤ 1.5 —Ä–∞–∑–∞ –Ω–∞ 15 —Å–µ–∫—É–Ω–¥",
		category = "Movement", 
		baseDuration = 15,
		cooldown = 30, -- 30 —Å–µ–∫—É–Ω–¥ –∫—É–ª–¥–∞—É–Ω
		price = 40, -- –î–µ—à–µ–≤–ª–µ –æ—Å—Ç–∞–ª—å–Ω—ã—Ö
		effects = {
			{
				type = "Multiply",
				value = 1.5, -- x1.5 –∫ –ø—Ä—ã–∂–∫—É
				target = "JumpHeight"
			}
		},
		icon = "‚¨ÜÔ∏è",
		isStackable = false, -- –ù–µ–ª—å–∑—è —Å—Ç–∞–∫–∞—Ç—å –ø—Ä—ã–∂–∫–∏
	}
}

-- –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏ –ø–æ ID
local function getAbilityById(abilityId: string): Ability?
	for _, ability in ipairs(ABILITIES) do
		if ability.id == abilityId then
			return ability
		end
	end
	return nil
end

-- –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–µ–π –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
local function getAbilitiesByCategory(category: string): AbilityList
	local result: AbilityList = {}
	for _, ability in ipairs(ABILITIES) do
		if ability.category == category then
			table.insert(result, ability)
		end
	end
	return result
end

-- –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤–∞–ª–∏–¥–∞—Ü–∏–∏ —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏
local function validateAbility(ability: Ability): boolean
	-- –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è
	if not ability.id or not ability.name or not ability.description then
		return false
	end
	
	-- –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å –∑–Ω–∞—á–µ–Ω–∏–π
	if ability.baseDuration <= 0 or ability.cooldown < 0 or ability.price < 0 then
		return false
	end
	
	-- –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —ç—Ñ—Ñ–µ–∫—Ç–æ–≤
	if not ability.effects or #ability.effects == 0 then
		return false
	end
	
	return true
end

-- –í–∞–ª–∏–¥–∏—Ä—É–µ–º –≤—Å–µ —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –º–æ–¥—É–ª—è
for _, ability in ipairs(ABILITIES) do
	if not validateAbility(ability) then
		error("AbilityData: –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å: " .. tostring(ability.id))
	end
end

print("AbilityData: –ó–∞–≥—Ä—É–∂–µ–Ω–æ", #ABILITIES, "—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–µ–π")

return {
	ABILITIES = ABILITIES,
	getAbilityById = getAbilityById,
	getAbilitiesByCategory = getAbilitiesByCategory,
	validateAbility = validateAbility,
}
