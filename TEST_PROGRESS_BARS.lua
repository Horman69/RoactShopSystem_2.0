-- –¢–µ—Å—Ç –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä–æ–≤
-- –ó–∞–ø—É—Å–∫: –ø–æ–º–µ—Å—Ç–∏—Ç—å –≤ ServerScriptService –∏ –≤—ã–ø–æ–ª–Ω–∏—Ç—å

local ReplicatedStorage = game:GetService("ReplicatedStorage")

-- –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ñ–∞–π–ª–æ–≤
print("üß™ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ü–†–û–ì–†–ï–°–°-–ë–ê–†–û–í")
print("============================")

-- 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ AbilityConfig
local function testAbilityConfig()
    print("\n1Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ AbilityConfig...")
    
    local success, AbilityConfig = pcall(function()
        local ModuleLoader = require(ReplicatedStorage:WaitForChild("shared"):WaitForChild("ModuleLoader"))
        return ModuleLoader.require("shared/AbilityConfig")
    end)
    
    if success and AbilityConfig then
        print("‚úÖ AbilityConfig –∑–∞–≥—Ä—É–∂–µ–Ω —É—Å–ø–µ—à–Ω–æ")
        print("üìä –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–µ–π:", #AbilityConfig)
        
        -- –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏
        for _, ability in ipairs(AbilityConfig) do
            if ability.id == "speed_boost" then
                print("‚ö° speed_boost: –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å =", ability.baseDuration, "—Å–µ–∫, –∫—É–ª–¥–∞—É–Ω =", ability.cooldown, "—Å–µ–∫")
            elseif ability.id == "shield_aura" then
                print("üõ°Ô∏è shield_aura: –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å =", ability.baseDuration, "—Å–µ–∫, –∫—É–ª–¥–∞—É–Ω =", ability.cooldown, "—Å–µ–∫")
            elseif ability.id == "jump_boost" then
                print("üöÄ jump_boost: –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å =", ability.baseDuration, "—Å–µ–∫, –∫—É–ª–¥–∞—É–Ω =", ability.cooldown, "—Å–µ–∫")
            end
        end
    else
        print("‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ AbilityConfig:", AbilityConfig)
    end
end

-- 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É AbilityPanel
local function testAbilityPanel()
    print("\n2Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ AbilityPanel...")
    
    local success, error = pcall(function()
        local ModuleLoader = require(ReplicatedStorage:WaitForChild("shared"):WaitForChild("ModuleLoader"))
        local AbilityPanel = ModuleLoader.require("App/AbilityPanel")
        print("‚úÖ AbilityPanel –∑–∞–≥—Ä—É–∂–µ–Ω —É—Å–ø–µ—à–Ω–æ")
        
        -- –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç—Ç–æ Roact –∫–æ–º–ø–æ–Ω–µ–Ω—Ç
        if AbilityPanel.extend then
            print("‚úÖ AbilityPanel —è–≤–ª—è–µ—Ç—Å—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–º Roact –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–º")
        else
            print("‚ùå AbilityPanel –Ω–µ —è–≤–ª—è–µ—Ç—Å—è Roact –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–º")
        end
    end)
    
    if not success then
        print("‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ AbilityPanel:", error)
    end
end

-- 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º AbilityService
local function testAbilityService()
    print("\n3Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ AbilityService...")
    
    local success, error = pcall(function()
        local ModuleLoader = require(ReplicatedStorage:WaitForChild("shared"):WaitForChild("ModuleLoader"))
        local AbilityService = ModuleLoader.require("services/AbilityService")
        local service = AbilityService.new()
        
        print("‚úÖ AbilityService —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ")
        
        -- –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ –º–µ—Ç–æ–¥—ã
        if service.getActiveEffects then
            print("‚úÖ –ú–µ—Ç–æ–¥ getActiveEffects –Ω–∞–π–¥–µ–Ω")
        end
        if service.isAbilityUnavailableForUI then
            print("‚úÖ –ú–µ—Ç–æ–¥ isAbilityUnavailableForUI –Ω–∞–π–¥–µ–Ω")
        end
        if service.getUITimeLeft then
            print("‚úÖ –ú–µ—Ç–æ–¥ getUITimeLeft –Ω–∞–π–¥–µ–Ω")
        end
    end)
    
    if not success then
        print("‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è AbilityService:", error)
    end
end

-- –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç—ã
testAbilityConfig()
testAbilityService() 
testAbilityPanel()

print("\nüéØ –†–ï–ó–£–õ–¨–¢–ê–¢ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø")
print("=======================")
print("–ï—Å–ª–∏ –≤—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ, –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä—ã –≥–æ—Ç–æ–≤—ã –∫ —Ä–∞–±–æ—Ç–µ!")
print("–°–ª–µ–¥—É—é—â–∏–π —à–∞–≥: –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –≤ –∏–≥—Ä–µ –∞–∫—Ç–∏–≤–∞—Ü–∏–µ–π —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–µ–π.")
